// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Onboarding.proto

#include "Onboarding.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
extern PROTOBUF_INTERNAL_EXPORT_Common_2fAddress_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Address_Common_2fAddress_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_Common_2fPhone_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Phone_Common_2fPhone_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_Onboarding_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_EmergencyContact_Onboarding_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_google_2fprotobuf_2ftimestamp_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Timestamp_google_2fprotobuf_2ftimestamp_2eproto;
namespace Workstream {
namespace Protocol {
namespace Onboarding {
class CompanyEventDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<CompanyEvent> _instance;
} _CompanyEvent_default_instance_;
class EmployeeEventDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<EmployeeEvent> _instance;
} _EmployeeEvent_default_instance_;
class CompanyStaffEventDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<CompanyStaffEvent> _instance;
} _CompanyStaffEvent_default_instance_;
class EmergencyContactDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<EmergencyContact> _instance;
} _EmergencyContact_default_instance_;
class EmployeeInformationEventDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<EmployeeInformationEvent> _instance;
} _EmployeeInformationEvent_default_instance_;
class EmployeeInitialStateEventDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<EmployeeInitialStateEvent> _instance;
} _EmployeeInitialStateEvent_default_instance_;
}  // namespace Onboarding
}  // namespace Protocol
}  // namespace Workstream
static void InitDefaultsscc_info_CompanyEvent_Onboarding_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Workstream::Protocol::Onboarding::_CompanyEvent_default_instance_;
    new (ptr) ::Workstream::Protocol::Onboarding::CompanyEvent();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_CompanyEvent_Onboarding_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_CompanyEvent_Onboarding_2eproto}, {
      &scc_info_Timestamp_google_2fprotobuf_2ftimestamp_2eproto.base,}};

static void InitDefaultsscc_info_CompanyStaffEvent_Onboarding_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Workstream::Protocol::Onboarding::_CompanyStaffEvent_default_instance_;
    new (ptr) ::Workstream::Protocol::Onboarding::CompanyStaffEvent();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_CompanyStaffEvent_Onboarding_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 2, 0, InitDefaultsscc_info_CompanyStaffEvent_Onboarding_2eproto}, {
      &scc_info_Timestamp_google_2fprotobuf_2ftimestamp_2eproto.base,
      &scc_info_Phone_Common_2fPhone_2eproto.base,}};

static void InitDefaultsscc_info_EmergencyContact_Onboarding_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Workstream::Protocol::Onboarding::_EmergencyContact_default_instance_;
    new (ptr) ::Workstream::Protocol::Onboarding::EmergencyContact();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_EmergencyContact_Onboarding_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_EmergencyContact_Onboarding_2eproto}, {
      &scc_info_Address_Common_2fAddress_2eproto.base,}};

static void InitDefaultsscc_info_EmployeeEvent_Onboarding_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Workstream::Protocol::Onboarding::_EmployeeEvent_default_instance_;
    new (ptr) ::Workstream::Protocol::Onboarding::EmployeeEvent();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_EmployeeEvent_Onboarding_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_EmployeeEvent_Onboarding_2eproto}, {
      &scc_info_Timestamp_google_2fprotobuf_2ftimestamp_2eproto.base,}};

static void InitDefaultsscc_info_EmployeeInformationEvent_Onboarding_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Workstream::Protocol::Onboarding::_EmployeeInformationEvent_default_instance_;
    new (ptr) ::Workstream::Protocol::Onboarding::EmployeeInformationEvent();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<4> scc_info_EmployeeInformationEvent_Onboarding_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 4, 0, InitDefaultsscc_info_EmployeeInformationEvent_Onboarding_2eproto}, {
      &scc_info_Timestamp_google_2fprotobuf_2ftimestamp_2eproto.base,
      &scc_info_Phone_Common_2fPhone_2eproto.base,
      &scc_info_Address_Common_2fAddress_2eproto.base,
      &scc_info_EmergencyContact_Onboarding_2eproto.base,}};

static void InitDefaultsscc_info_EmployeeInitialStateEvent_Onboarding_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Workstream::Protocol::Onboarding::_EmployeeInitialStateEvent_default_instance_;
    new (ptr) ::Workstream::Protocol::Onboarding::EmployeeInitialStateEvent();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_EmployeeInitialStateEvent_Onboarding_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_EmployeeInitialStateEvent_Onboarding_2eproto}, {
      &scc_info_Timestamp_google_2fprotobuf_2ftimestamp_2eproto.base,}};

static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_Onboarding_2eproto[6];
static const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* file_level_enum_descriptors_Onboarding_2eproto[3];
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_Onboarding_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_Onboarding_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Workstream::Protocol::Onboarding::CompanyEvent, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::Workstream::Protocol::Onboarding::CompanyEvent, uuid_),
  PROTOBUF_FIELD_OFFSET(::Workstream::Protocol::Onboarding::CompanyEvent, id_),
  PROTOBUF_FIELD_OFFSET(::Workstream::Protocol::Onboarding::CompanyEvent, created_at_),
  PROTOBUF_FIELD_OFFSET(::Workstream::Protocol::Onboarding::CompanyEvent, updated_at_),
  PROTOBUF_FIELD_OFFSET(::Workstream::Protocol::Onboarding::CompanyEvent, name_),
  PROTOBUF_FIELD_OFFSET(::Workstream::Protocol::Onboarding::CompanyEvent, status_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Workstream::Protocol::Onboarding::EmployeeEvent, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::Workstream::Protocol::Onboarding::EmployeeEvent, uuid_),
  PROTOBUF_FIELD_OFFSET(::Workstream::Protocol::Onboarding::EmployeeEvent, id_),
  PROTOBUF_FIELD_OFFSET(::Workstream::Protocol::Onboarding::EmployeeEvent, created_at_),
  PROTOBUF_FIELD_OFFSET(::Workstream::Protocol::Onboarding::EmployeeEvent, updated_at_),
  PROTOBUF_FIELD_OFFSET(::Workstream::Protocol::Onboarding::EmployeeEvent, company_id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Workstream::Protocol::Onboarding::CompanyStaffEvent, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::Workstream::Protocol::Onboarding::CompanyStaffEvent, uuid_),
  PROTOBUF_FIELD_OFFSET(::Workstream::Protocol::Onboarding::CompanyStaffEvent, id_),
  PROTOBUF_FIELD_OFFSET(::Workstream::Protocol::Onboarding::CompanyStaffEvent, created_at_),
  PROTOBUF_FIELD_OFFSET(::Workstream::Protocol::Onboarding::CompanyStaffEvent, updated_at_),
  PROTOBUF_FIELD_OFFSET(::Workstream::Protocol::Onboarding::CompanyStaffEvent, status_),
  PROTOBUF_FIELD_OFFSET(::Workstream::Protocol::Onboarding::CompanyStaffEvent, company_id_),
  PROTOBUF_FIELD_OFFSET(::Workstream::Protocol::Onboarding::CompanyStaffEvent, name_),
  PROTOBUF_FIELD_OFFSET(::Workstream::Protocol::Onboarding::CompanyStaffEvent, email_),
  PROTOBUF_FIELD_OFFSET(::Workstream::Protocol::Onboarding::CompanyStaffEvent, phone_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Workstream::Protocol::Onboarding::EmergencyContact, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::Workstream::Protocol::Onboarding::EmergencyContact, relationship_),
  PROTOBUF_FIELD_OFFSET(::Workstream::Protocol::Onboarding::EmergencyContact, first_name_),
  PROTOBUF_FIELD_OFFSET(::Workstream::Protocol::Onboarding::EmergencyContact, last_name_),
  PROTOBUF_FIELD_OFFSET(::Workstream::Protocol::Onboarding::EmergencyContact, home_phone_),
  PROTOBUF_FIELD_OFFSET(::Workstream::Protocol::Onboarding::EmergencyContact, work_phone_),
  PROTOBUF_FIELD_OFFSET(::Workstream::Protocol::Onboarding::EmergencyContact, email_),
  PROTOBUF_FIELD_OFFSET(::Workstream::Protocol::Onboarding::EmergencyContact, address_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Workstream::Protocol::Onboarding::EmployeeInformationEvent, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::Workstream::Protocol::Onboarding::EmployeeInformationEvent, uuid_),
  PROTOBUF_FIELD_OFFSET(::Workstream::Protocol::Onboarding::EmployeeInformationEvent, id_),
  PROTOBUF_FIELD_OFFSET(::Workstream::Protocol::Onboarding::EmployeeInformationEvent, created_at_),
  PROTOBUF_FIELD_OFFSET(::Workstream::Protocol::Onboarding::EmployeeInformationEvent, updated_at_),
  PROTOBUF_FIELD_OFFSET(::Workstream::Protocol::Onboarding::EmployeeInformationEvent, company_id_),
  PROTOBUF_FIELD_OFFSET(::Workstream::Protocol::Onboarding::EmployeeInformationEvent, employee_id_),
  PROTOBUF_FIELD_OFFSET(::Workstream::Protocol::Onboarding::EmployeeInformationEvent, first_name_),
  PROTOBUF_FIELD_OFFSET(::Workstream::Protocol::Onboarding::EmployeeInformationEvent, middle_name_),
  PROTOBUF_FIELD_OFFSET(::Workstream::Protocol::Onboarding::EmployeeInformationEvent, last_name_),
  PROTOBUF_FIELD_OFFSET(::Workstream::Protocol::Onboarding::EmployeeInformationEvent, prior_last_name_),
  PROTOBUF_FIELD_OFFSET(::Workstream::Protocol::Onboarding::EmployeeInformationEvent, prefered_name_),
  PROTOBUF_FIELD_OFFSET(::Workstream::Protocol::Onboarding::EmployeeInformationEvent, salutation_),
  PROTOBUF_FIELD_OFFSET(::Workstream::Protocol::Onboarding::EmployeeInformationEvent, ethnicity_),
  PROTOBUF_FIELD_OFFSET(::Workstream::Protocol::Onboarding::EmployeeInformationEvent, gender_),
  PROTOBUF_FIELD_OFFSET(::Workstream::Protocol::Onboarding::EmployeeInformationEvent, marital_status_),
  PROTOBUF_FIELD_OFFSET(::Workstream::Protocol::Onboarding::EmployeeInformationEvent, ssn_),
  PROTOBUF_FIELD_OFFSET(::Workstream::Protocol::Onboarding::EmployeeInformationEvent, smoker_),
  PROTOBUF_FIELD_OFFSET(::Workstream::Protocol::Onboarding::EmployeeInformationEvent, nationality_),
  PROTOBUF_FIELD_OFFSET(::Workstream::Protocol::Onboarding::EmployeeInformationEvent, date_of_birth_),
  PROTOBUF_FIELD_OFFSET(::Workstream::Protocol::Onboarding::EmployeeInformationEvent, home_email_),
  PROTOBUF_FIELD_OFFSET(::Workstream::Protocol::Onboarding::EmployeeInformationEvent, home_phone_),
  PROTOBUF_FIELD_OFFSET(::Workstream::Protocol::Onboarding::EmployeeInformationEvent, home_address_),
  PROTOBUF_FIELD_OFFSET(::Workstream::Protocol::Onboarding::EmployeeInformationEvent, work_location_name_),
  PROTOBUF_FIELD_OFFSET(::Workstream::Protocol::Onboarding::EmployeeInformationEvent, work_email_),
  PROTOBUF_FIELD_OFFSET(::Workstream::Protocol::Onboarding::EmployeeInformationEvent, work_phone_),
  PROTOBUF_FIELD_OFFSET(::Workstream::Protocol::Onboarding::EmployeeInformationEvent, work_address_),
  PROTOBUF_FIELD_OFFSET(::Workstream::Protocol::Onboarding::EmployeeInformationEvent, emergency_contact_),
  PROTOBUF_FIELD_OFFSET(::Workstream::Protocol::Onboarding::EmployeeInformationEvent, apply_date_),
  PROTOBUF_FIELD_OFFSET(::Workstream::Protocol::Onboarding::EmployeeInformationEvent, hire_date_),
  PROTOBUF_FIELD_OFFSET(::Workstream::Protocol::Onboarding::EmployeeInformationEvent, start_date_),
  PROTOBUF_FIELD_OFFSET(::Workstream::Protocol::Onboarding::EmployeeInformationEvent, termination_date_),
  PROTOBUF_FIELD_OFFSET(::Workstream::Protocol::Onboarding::EmployeeInformationEvent, job_title_),
  PROTOBUF_FIELD_OFFSET(::Workstream::Protocol::Onboarding::EmployeeInformationEvent, department_name_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Workstream::Protocol::Onboarding::EmployeeInitialStateEvent, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::Workstream::Protocol::Onboarding::EmployeeInitialStateEvent, uuid_),
  PROTOBUF_FIELD_OFFSET(::Workstream::Protocol::Onboarding::EmployeeInitialStateEvent, id_),
  PROTOBUF_FIELD_OFFSET(::Workstream::Protocol::Onboarding::EmployeeInitialStateEvent, created_at_),
  PROTOBUF_FIELD_OFFSET(::Workstream::Protocol::Onboarding::EmployeeInitialStateEvent, updated_at_),
  PROTOBUF_FIELD_OFFSET(::Workstream::Protocol::Onboarding::EmployeeInitialStateEvent, employee_id_),
  PROTOBUF_FIELD_OFFSET(::Workstream::Protocol::Onboarding::EmployeeInitialStateEvent, first_name_),
  PROTOBUF_FIELD_OFFSET(::Workstream::Protocol::Onboarding::EmployeeInitialStateEvent, last_name_),
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::Workstream::Protocol::Onboarding::CompanyEvent)},
  { 11, -1, sizeof(::Workstream::Protocol::Onboarding::EmployeeEvent)},
  { 21, -1, sizeof(::Workstream::Protocol::Onboarding::CompanyStaffEvent)},
  { 35, -1, sizeof(::Workstream::Protocol::Onboarding::EmergencyContact)},
  { 47, -1, sizeof(::Workstream::Protocol::Onboarding::EmployeeInformationEvent)},
  { 85, -1, sizeof(::Workstream::Protocol::Onboarding::EmployeeInitialStateEvent)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Workstream::Protocol::Onboarding::_CompanyEvent_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Workstream::Protocol::Onboarding::_EmployeeEvent_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Workstream::Protocol::Onboarding::_CompanyStaffEvent_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Workstream::Protocol::Onboarding::_EmergencyContact_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Workstream::Protocol::Onboarding::_EmployeeInformationEvent_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Workstream::Protocol::Onboarding::_EmployeeInitialStateEvent_default_instance_),
};

const char descriptor_table_protodef_Onboarding_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\020Onboarding.proto\022\036Workstream.Protocol."
  "Onboarding\032\022Common/Phone.proto\032\024Common/A"
  "ddress.proto\032\037google/protobuf/timestamp."
  "proto\"\245\002\n\014CompanyEvent\022\014\n\004uuid\030\001 \001(\t\022\n\n\002"
  "id\030\002 \001(\003\022.\n\ncreated_at\030\003 \001(\0132\032.google.pr"
  "otobuf.Timestamp\022.\n\nupdated_at\030\004 \001(\0132\032.g"
  "oogle.protobuf.Timestamp\022\014\n\004name\030\005 \001(\t\022J"
  "\n\006status\030\006 \001(\0162:.Workstream.Protocol.Onb"
  "oarding.CompanyEvent.CompanyStatus\"A\n\rCo"
  "mpanyStatus\022\n\n\006ACTIVE\020\000\022\010\n\004TEST\020\001\022\014\n\010DIS"
  "ABLED\020\002\022\014\n\010TEMPLATE\020\003\"\235\001\n\rEmployeeEvent\022"
  "\014\n\004uuid\030\001 \001(\t\022\n\n\002id\030\002 \001(\003\022.\n\ncreated_at\030"
  "\003 \001(\0132\032.google.protobuf.Timestamp\022.\n\nupd"
  "ated_at\030\004 \001(\0132\032.google.protobuf.Timestam"
  "p\022\022\n\ncompany_id\030\005 \001(\003\"\366\002\n\021CompanyStaffEv"
  "ent\022\014\n\004uuid\030\001 \001(\t\022\n\n\002id\030\002 \001(\003\022.\n\ncreated"
  "_at\030\003 \001(\0132\032.google.protobuf.Timestamp\022.\n"
  "\nupdated_at\030\004 \001(\0132\032.google.protobuf.Time"
  "stamp\022T\n\006status\030\005 \001(\0162D.Workstream.Proto"
  "col.Onboarding.CompanyStaffEvent.Company"
  "StaffStatus\022\022\n\ncompany_id\030\006 \001(\003\022\014\n\004name\030"
  "\007 \001(\t\022\r\n\005email\030\010 \001(\t\0220\n\005phone\030\t \001(\0132!.Wo"
  "rkstream.Protocol.Common.Phone\".\n\022Compan"
  "yStaffStatus\022\n\n\006ACTIVE\020\000\022\014\n\010DISABLED\020\001\"\274"
  "\001\n\020EmergencyContact\022\024\n\014relationship\030\001 \001("
  "\t\022\022\n\nfirst_name\030\002 \001(\t\022\021\n\tlast_name\030\003 \001(\t"
  "\022\022\n\nhome_phone\030\004 \001(\t\022\022\n\nwork_phone\030\005 \001(\t"
  "\022\r\n\005email\030\006 \001(\t\0224\n\007address\030\007 \001(\0132#.Works"
  "tream.Protocol.Common.Address\"\370\007\n\030Employ"
  "eeInformationEvent\022\014\n\004uuid\030\001 \001(\t\022\n\n\002id\030\002"
  " \001(\003\022.\n\ncreated_at\030\003 \001(\0132\032.google.protob"
  "uf.Timestamp\022.\n\nupdated_at\030\004 \001(\0132\032.googl"
  "e.protobuf.Timestamp\022\022\n\ncompany_id\030\005 \001(\003"
  "\022\023\n\013employee_id\030\006 \001(\003\022\022\n\nfirst_name\030\007 \001("
  "\t\022\023\n\013middle_name\030\010 \001(\t\022\021\n\tlast_name\030\t \001("
  "\t\022\027\n\017prior_last_name\030\n \001(\t\022\025\n\rprefered_n"
  "ame\030\013 \001(\t\022\022\n\nsalutation\030\014 \001(\t\022\021\n\tethnici"
  "ty\030\r \001(\t\022\016\n\006gender\030\016 \001(\t\022E\n\016marital_stat"
  "us\030\017 \001(\0162-.Workstream.Protocol.Onboardin"
  "g.MaritalStatus\022\013\n\003ssn\030\020 \001(\t\022\016\n\006smoker\030\021"
  " \001(\010\022\023\n\013nationality\030\022 \001(\t\022\025\n\rdate_of_bir"
  "th\030\023 \001(\t\022\022\n\nhome_email\030\037 \001(\t\0225\n\nhome_pho"
  "ne\030  \001(\0132!.Workstream.Protocol.Common.Ph"
  "one\0229\n\014home_address\030! \001(\0132#.Workstream.P"
  "rotocol.Common.Address\022\032\n\022work_location_"
  "name\030) \001(\t\022\022\n\nwork_email\030* \001(\t\0225\n\nwork_p"
  "hone\030+ \001(\0132!.Workstream.Protocol.Common."
  "Phone\0229\n\014work_address\030, \001(\0132#.Workstream"
  ".Protocol.Common.Address\022K\n\021emergency_co"
  "ntact\0303 \003(\01320.Workstream.Protocol.Onboar"
  "ding.EmergencyContact\022\022\n\napply_date\0304 \001("
  "\t\022\021\n\thire_date\0305 \001(\t\022\022\n\nstart_date\0306 \001(\t"
  "\022\030\n\020termination_date\0307 \001(\t\022\021\n\tjob_title\030"
  "8 \001(\t\022\027\n\017department_name\0309 \001(\tJ\004\010\024\020\037J\004\010\""
  "\020)J\004\010-\0203\"\321\001\n\031EmployeeInitialStateEvent\022\014"
  "\n\004uuid\030\001 \001(\t\022\n\n\002id\030\002 \001(\003\022.\n\ncreated_at\030\003"
  " \001(\0132\032.google.protobuf.Timestamp\022.\n\nupda"
  "ted_at\030\004 \001(\0132\032.google.protobuf.Timestamp"
  "\022\023\n\013employee_id\030\005 \001(\003\022\022\n\nfirst_name\030\006 \001("
  "\t\022\021\n\tlast_name\030\007 \001(\t*Y\n\rMaritalStatus\022\013\n"
  "\007MARRIED\020\000\022\014\n\010DIVORCED\020\001\022\013\n\007WIDOWED\020\002\022\021\n"
  "\rNEVER_MARRIED\020\003\022\r\n\tSEPARATED\020\004B Z\036works"
  "tream_protocol/onboardingb\006proto3"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_Onboarding_2eproto_deps[3] = {
  &::descriptor_table_Common_2fAddress_2eproto,
  &::descriptor_table_Common_2fPhone_2eproto,
  &::descriptor_table_google_2fprotobuf_2ftimestamp_2eproto,
};
static ::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase*const descriptor_table_Onboarding_2eproto_sccs[6] = {
  &scc_info_CompanyEvent_Onboarding_2eproto.base,
  &scc_info_CompanyStaffEvent_Onboarding_2eproto.base,
  &scc_info_EmergencyContact_Onboarding_2eproto.base,
  &scc_info_EmployeeEvent_Onboarding_2eproto.base,
  &scc_info_EmployeeInformationEvent_Onboarding_2eproto.base,
  &scc_info_EmployeeInitialStateEvent_Onboarding_2eproto.base,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_Onboarding_2eproto_once;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_Onboarding_2eproto = {
  false, false, descriptor_table_protodef_Onboarding_2eproto, "Onboarding.proto", 2513,
  &descriptor_table_Onboarding_2eproto_once, descriptor_table_Onboarding_2eproto_sccs, descriptor_table_Onboarding_2eproto_deps, 6, 3,
  schemas, file_default_instances, TableStruct_Onboarding_2eproto::offsets,
  file_level_metadata_Onboarding_2eproto, 6, file_level_enum_descriptors_Onboarding_2eproto, file_level_service_descriptors_Onboarding_2eproto,
};

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_Onboarding_2eproto = (static_cast<void>(::PROTOBUF_NAMESPACE_ID::internal::AddDescriptors(&descriptor_table_Onboarding_2eproto)), true);
namespace Workstream {
namespace Protocol {
namespace Onboarding {
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* CompanyEvent_CompanyStatus_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_Onboarding_2eproto);
  return file_level_enum_descriptors_Onboarding_2eproto[0];
}
bool CompanyEvent_CompanyStatus_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
constexpr CompanyEvent_CompanyStatus CompanyEvent::ACTIVE;
constexpr CompanyEvent_CompanyStatus CompanyEvent::TEST;
constexpr CompanyEvent_CompanyStatus CompanyEvent::DISABLED;
constexpr CompanyEvent_CompanyStatus CompanyEvent::TEMPLATE;
constexpr CompanyEvent_CompanyStatus CompanyEvent::CompanyStatus_MIN;
constexpr CompanyEvent_CompanyStatus CompanyEvent::CompanyStatus_MAX;
constexpr int CompanyEvent::CompanyStatus_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* CompanyStaffEvent_CompanyStaffStatus_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_Onboarding_2eproto);
  return file_level_enum_descriptors_Onboarding_2eproto[1];
}
bool CompanyStaffEvent_CompanyStaffStatus_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
constexpr CompanyStaffEvent_CompanyStaffStatus CompanyStaffEvent::ACTIVE;
constexpr CompanyStaffEvent_CompanyStaffStatus CompanyStaffEvent::DISABLED;
constexpr CompanyStaffEvent_CompanyStaffStatus CompanyStaffEvent::CompanyStaffStatus_MIN;
constexpr CompanyStaffEvent_CompanyStaffStatus CompanyStaffEvent::CompanyStaffStatus_MAX;
constexpr int CompanyStaffEvent::CompanyStaffStatus_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* MaritalStatus_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_Onboarding_2eproto);
  return file_level_enum_descriptors_Onboarding_2eproto[2];
}
bool MaritalStatus_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
      return true;
    default:
      return false;
  }
}


// ===================================================================

class CompanyEvent::_Internal {
 public:
  static const PROTOBUF_NAMESPACE_ID::Timestamp& created_at(const CompanyEvent* msg);
  static const PROTOBUF_NAMESPACE_ID::Timestamp& updated_at(const CompanyEvent* msg);
};

const PROTOBUF_NAMESPACE_ID::Timestamp&
CompanyEvent::_Internal::created_at(const CompanyEvent* msg) {
  return *msg->created_at_;
}
const PROTOBUF_NAMESPACE_ID::Timestamp&
CompanyEvent::_Internal::updated_at(const CompanyEvent* msg) {
  return *msg->updated_at_;
}
void CompanyEvent::clear_created_at() {
  if (GetArena() == nullptr && created_at_ != nullptr) {
    delete created_at_;
  }
  created_at_ = nullptr;
}
void CompanyEvent::clear_updated_at() {
  if (GetArena() == nullptr && updated_at_ != nullptr) {
    delete updated_at_;
  }
  updated_at_ = nullptr;
}
CompanyEvent::CompanyEvent(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:Workstream.Protocol.Onboarding.CompanyEvent)
}
CompanyEvent::CompanyEvent(const CompanyEvent& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  uuid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_uuid().empty()) {
    uuid_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_uuid(), 
      GetArena());
  }
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_name().empty()) {
    name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_name(), 
      GetArena());
  }
  if (from._internal_has_created_at()) {
    created_at_ = new PROTOBUF_NAMESPACE_ID::Timestamp(*from.created_at_);
  } else {
    created_at_ = nullptr;
  }
  if (from._internal_has_updated_at()) {
    updated_at_ = new PROTOBUF_NAMESPACE_ID::Timestamp(*from.updated_at_);
  } else {
    updated_at_ = nullptr;
  }
  ::memcpy(&id_, &from.id_,
    static_cast<size_t>(reinterpret_cast<char*>(&status_) -
    reinterpret_cast<char*>(&id_)) + sizeof(status_));
  // @@protoc_insertion_point(copy_constructor:Workstream.Protocol.Onboarding.CompanyEvent)
}

void CompanyEvent::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_CompanyEvent_Onboarding_2eproto.base);
  uuid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
      reinterpret_cast<char*>(&created_at_) - reinterpret_cast<char*>(this)),
      0, static_cast<size_t>(reinterpret_cast<char*>(&status_) -
      reinterpret_cast<char*>(&created_at_)) + sizeof(status_));
}

CompanyEvent::~CompanyEvent() {
  // @@protoc_insertion_point(destructor:Workstream.Protocol.Onboarding.CompanyEvent)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void CompanyEvent::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  uuid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete created_at_;
  if (this != internal_default_instance()) delete updated_at_;
}

void CompanyEvent::ArenaDtor(void* object) {
  CompanyEvent* _this = reinterpret_cast< CompanyEvent* >(object);
  (void)_this;
}
void CompanyEvent::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CompanyEvent::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CompanyEvent& CompanyEvent::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_CompanyEvent_Onboarding_2eproto.base);
  return *internal_default_instance();
}


void CompanyEvent::Clear() {
// @@protoc_insertion_point(message_clear_start:Workstream.Protocol.Onboarding.CompanyEvent)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  uuid_.ClearToEmpty();
  name_.ClearToEmpty();
  if (GetArena() == nullptr && created_at_ != nullptr) {
    delete created_at_;
  }
  created_at_ = nullptr;
  if (GetArena() == nullptr && updated_at_ != nullptr) {
    delete updated_at_;
  }
  updated_at_ = nullptr;
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&status_) -
      reinterpret_cast<char*>(&id_)) + sizeof(status_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CompanyEvent::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string uuid = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_uuid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "Workstream.Protocol.Onboarding.CompanyEvent.uuid"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int64 id = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .google.protobuf.Timestamp created_at = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_created_at(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .google.protobuf.Timestamp updated_at = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_updated_at(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string name = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          auto str = _internal_mutable_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "Workstream.Protocol.Onboarding.CompanyEvent.name"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .Workstream.Protocol.Onboarding.CompanyEvent.CompanyStatus status = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 48)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_status(static_cast<::Workstream::Protocol::Onboarding::CompanyEvent_CompanyStatus>(val));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CompanyEvent::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Workstream.Protocol.Onboarding.CompanyEvent)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string uuid = 1;
  if (this->uuid().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_uuid().data(), static_cast<int>(this->_internal_uuid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "Workstream.Protocol.Onboarding.CompanyEvent.uuid");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_uuid(), target);
  }

  // int64 id = 2;
  if (this->id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(2, this->_internal_id(), target);
  }

  // .google.protobuf.Timestamp created_at = 3;
  if (this->has_created_at()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        3, _Internal::created_at(this), target, stream);
  }

  // .google.protobuf.Timestamp updated_at = 4;
  if (this->has_updated_at()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        4, _Internal::updated_at(this), target, stream);
  }

  // string name = 5;
  if (this->name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "Workstream.Protocol.Onboarding.CompanyEvent.name");
    target = stream->WriteStringMaybeAliased(
        5, this->_internal_name(), target);
  }

  // .Workstream.Protocol.Onboarding.CompanyEvent.CompanyStatus status = 6;
  if (this->status() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      6, this->_internal_status(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Workstream.Protocol.Onboarding.CompanyEvent)
  return target;
}

size_t CompanyEvent::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Workstream.Protocol.Onboarding.CompanyEvent)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string uuid = 1;
  if (this->uuid().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_uuid());
  }

  // string name = 5;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  // .google.protobuf.Timestamp created_at = 3;
  if (this->has_created_at()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *created_at_);
  }

  // .google.protobuf.Timestamp updated_at = 4;
  if (this->has_updated_at()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *updated_at_);
  }

  // int64 id = 2;
  if (this->id() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_id());
  }

  // .Workstream.Protocol.Onboarding.CompanyEvent.CompanyStatus status = 6;
  if (this->status() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_status());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CompanyEvent::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Workstream.Protocol.Onboarding.CompanyEvent)
  GOOGLE_DCHECK_NE(&from, this);
  const CompanyEvent* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CompanyEvent>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Workstream.Protocol.Onboarding.CompanyEvent)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Workstream.Protocol.Onboarding.CompanyEvent)
    MergeFrom(*source);
  }
}

void CompanyEvent::MergeFrom(const CompanyEvent& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Workstream.Protocol.Onboarding.CompanyEvent)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.uuid().size() > 0) {
    _internal_set_uuid(from._internal_uuid());
  }
  if (from.name().size() > 0) {
    _internal_set_name(from._internal_name());
  }
  if (from.has_created_at()) {
    _internal_mutable_created_at()->PROTOBUF_NAMESPACE_ID::Timestamp::MergeFrom(from._internal_created_at());
  }
  if (from.has_updated_at()) {
    _internal_mutable_updated_at()->PROTOBUF_NAMESPACE_ID::Timestamp::MergeFrom(from._internal_updated_at());
  }
  if (from.id() != 0) {
    _internal_set_id(from._internal_id());
  }
  if (from.status() != 0) {
    _internal_set_status(from._internal_status());
  }
}

void CompanyEvent::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Workstream.Protocol.Onboarding.CompanyEvent)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CompanyEvent::CopyFrom(const CompanyEvent& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Workstream.Protocol.Onboarding.CompanyEvent)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CompanyEvent::IsInitialized() const {
  return true;
}

void CompanyEvent::InternalSwap(CompanyEvent* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  uuid_.Swap(&other->uuid_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  name_.Swap(&other->name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CompanyEvent, status_)
      + sizeof(CompanyEvent::status_)
      - PROTOBUF_FIELD_OFFSET(CompanyEvent, created_at_)>(
          reinterpret_cast<char*>(&created_at_),
          reinterpret_cast<char*>(&other->created_at_));
}

::PROTOBUF_NAMESPACE_ID::Metadata CompanyEvent::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class EmployeeEvent::_Internal {
 public:
  static const PROTOBUF_NAMESPACE_ID::Timestamp& created_at(const EmployeeEvent* msg);
  static const PROTOBUF_NAMESPACE_ID::Timestamp& updated_at(const EmployeeEvent* msg);
};

const PROTOBUF_NAMESPACE_ID::Timestamp&
EmployeeEvent::_Internal::created_at(const EmployeeEvent* msg) {
  return *msg->created_at_;
}
const PROTOBUF_NAMESPACE_ID::Timestamp&
EmployeeEvent::_Internal::updated_at(const EmployeeEvent* msg) {
  return *msg->updated_at_;
}
void EmployeeEvent::clear_created_at() {
  if (GetArena() == nullptr && created_at_ != nullptr) {
    delete created_at_;
  }
  created_at_ = nullptr;
}
void EmployeeEvent::clear_updated_at() {
  if (GetArena() == nullptr && updated_at_ != nullptr) {
    delete updated_at_;
  }
  updated_at_ = nullptr;
}
EmployeeEvent::EmployeeEvent(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:Workstream.Protocol.Onboarding.EmployeeEvent)
}
EmployeeEvent::EmployeeEvent(const EmployeeEvent& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  uuid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_uuid().empty()) {
    uuid_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_uuid(), 
      GetArena());
  }
  if (from._internal_has_created_at()) {
    created_at_ = new PROTOBUF_NAMESPACE_ID::Timestamp(*from.created_at_);
  } else {
    created_at_ = nullptr;
  }
  if (from._internal_has_updated_at()) {
    updated_at_ = new PROTOBUF_NAMESPACE_ID::Timestamp(*from.updated_at_);
  } else {
    updated_at_ = nullptr;
  }
  ::memcpy(&id_, &from.id_,
    static_cast<size_t>(reinterpret_cast<char*>(&company_id_) -
    reinterpret_cast<char*>(&id_)) + sizeof(company_id_));
  // @@protoc_insertion_point(copy_constructor:Workstream.Protocol.Onboarding.EmployeeEvent)
}

void EmployeeEvent::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_EmployeeEvent_Onboarding_2eproto.base);
  uuid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
      reinterpret_cast<char*>(&created_at_) - reinterpret_cast<char*>(this)),
      0, static_cast<size_t>(reinterpret_cast<char*>(&company_id_) -
      reinterpret_cast<char*>(&created_at_)) + sizeof(company_id_));
}

EmployeeEvent::~EmployeeEvent() {
  // @@protoc_insertion_point(destructor:Workstream.Protocol.Onboarding.EmployeeEvent)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void EmployeeEvent::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  uuid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete created_at_;
  if (this != internal_default_instance()) delete updated_at_;
}

void EmployeeEvent::ArenaDtor(void* object) {
  EmployeeEvent* _this = reinterpret_cast< EmployeeEvent* >(object);
  (void)_this;
}
void EmployeeEvent::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void EmployeeEvent::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const EmployeeEvent& EmployeeEvent::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_EmployeeEvent_Onboarding_2eproto.base);
  return *internal_default_instance();
}


void EmployeeEvent::Clear() {
// @@protoc_insertion_point(message_clear_start:Workstream.Protocol.Onboarding.EmployeeEvent)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  uuid_.ClearToEmpty();
  if (GetArena() == nullptr && created_at_ != nullptr) {
    delete created_at_;
  }
  created_at_ = nullptr;
  if (GetArena() == nullptr && updated_at_ != nullptr) {
    delete updated_at_;
  }
  updated_at_ = nullptr;
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&company_id_) -
      reinterpret_cast<char*>(&id_)) + sizeof(company_id_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* EmployeeEvent::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string uuid = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_uuid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "Workstream.Protocol.Onboarding.EmployeeEvent.uuid"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int64 id = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .google.protobuf.Timestamp created_at = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_created_at(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .google.protobuf.Timestamp updated_at = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_updated_at(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int64 company_id = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 40)) {
          company_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* EmployeeEvent::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Workstream.Protocol.Onboarding.EmployeeEvent)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string uuid = 1;
  if (this->uuid().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_uuid().data(), static_cast<int>(this->_internal_uuid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "Workstream.Protocol.Onboarding.EmployeeEvent.uuid");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_uuid(), target);
  }

  // int64 id = 2;
  if (this->id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(2, this->_internal_id(), target);
  }

  // .google.protobuf.Timestamp created_at = 3;
  if (this->has_created_at()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        3, _Internal::created_at(this), target, stream);
  }

  // .google.protobuf.Timestamp updated_at = 4;
  if (this->has_updated_at()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        4, _Internal::updated_at(this), target, stream);
  }

  // int64 company_id = 5;
  if (this->company_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(5, this->_internal_company_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Workstream.Protocol.Onboarding.EmployeeEvent)
  return target;
}

size_t EmployeeEvent::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Workstream.Protocol.Onboarding.EmployeeEvent)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string uuid = 1;
  if (this->uuid().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_uuid());
  }

  // .google.protobuf.Timestamp created_at = 3;
  if (this->has_created_at()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *created_at_);
  }

  // .google.protobuf.Timestamp updated_at = 4;
  if (this->has_updated_at()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *updated_at_);
  }

  // int64 id = 2;
  if (this->id() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_id());
  }

  // int64 company_id = 5;
  if (this->company_id() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_company_id());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void EmployeeEvent::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Workstream.Protocol.Onboarding.EmployeeEvent)
  GOOGLE_DCHECK_NE(&from, this);
  const EmployeeEvent* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<EmployeeEvent>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Workstream.Protocol.Onboarding.EmployeeEvent)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Workstream.Protocol.Onboarding.EmployeeEvent)
    MergeFrom(*source);
  }
}

void EmployeeEvent::MergeFrom(const EmployeeEvent& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Workstream.Protocol.Onboarding.EmployeeEvent)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.uuid().size() > 0) {
    _internal_set_uuid(from._internal_uuid());
  }
  if (from.has_created_at()) {
    _internal_mutable_created_at()->PROTOBUF_NAMESPACE_ID::Timestamp::MergeFrom(from._internal_created_at());
  }
  if (from.has_updated_at()) {
    _internal_mutable_updated_at()->PROTOBUF_NAMESPACE_ID::Timestamp::MergeFrom(from._internal_updated_at());
  }
  if (from.id() != 0) {
    _internal_set_id(from._internal_id());
  }
  if (from.company_id() != 0) {
    _internal_set_company_id(from._internal_company_id());
  }
}

void EmployeeEvent::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Workstream.Protocol.Onboarding.EmployeeEvent)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void EmployeeEvent::CopyFrom(const EmployeeEvent& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Workstream.Protocol.Onboarding.EmployeeEvent)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EmployeeEvent::IsInitialized() const {
  return true;
}

void EmployeeEvent::InternalSwap(EmployeeEvent* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  uuid_.Swap(&other->uuid_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(EmployeeEvent, company_id_)
      + sizeof(EmployeeEvent::company_id_)
      - PROTOBUF_FIELD_OFFSET(EmployeeEvent, created_at_)>(
          reinterpret_cast<char*>(&created_at_),
          reinterpret_cast<char*>(&other->created_at_));
}

::PROTOBUF_NAMESPACE_ID::Metadata EmployeeEvent::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class CompanyStaffEvent::_Internal {
 public:
  static const PROTOBUF_NAMESPACE_ID::Timestamp& created_at(const CompanyStaffEvent* msg);
  static const PROTOBUF_NAMESPACE_ID::Timestamp& updated_at(const CompanyStaffEvent* msg);
  static const ::Workstream::Protocol::Common::Phone& phone(const CompanyStaffEvent* msg);
};

const PROTOBUF_NAMESPACE_ID::Timestamp&
CompanyStaffEvent::_Internal::created_at(const CompanyStaffEvent* msg) {
  return *msg->created_at_;
}
const PROTOBUF_NAMESPACE_ID::Timestamp&
CompanyStaffEvent::_Internal::updated_at(const CompanyStaffEvent* msg) {
  return *msg->updated_at_;
}
const ::Workstream::Protocol::Common::Phone&
CompanyStaffEvent::_Internal::phone(const CompanyStaffEvent* msg) {
  return *msg->phone_;
}
void CompanyStaffEvent::clear_created_at() {
  if (GetArena() == nullptr && created_at_ != nullptr) {
    delete created_at_;
  }
  created_at_ = nullptr;
}
void CompanyStaffEvent::clear_updated_at() {
  if (GetArena() == nullptr && updated_at_ != nullptr) {
    delete updated_at_;
  }
  updated_at_ = nullptr;
}
void CompanyStaffEvent::clear_phone() {
  if (GetArena() == nullptr && phone_ != nullptr) {
    delete phone_;
  }
  phone_ = nullptr;
}
CompanyStaffEvent::CompanyStaffEvent(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:Workstream.Protocol.Onboarding.CompanyStaffEvent)
}
CompanyStaffEvent::CompanyStaffEvent(const CompanyStaffEvent& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  uuid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_uuid().empty()) {
    uuid_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_uuid(), 
      GetArena());
  }
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_name().empty()) {
    name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_name(), 
      GetArena());
  }
  email_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_email().empty()) {
    email_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_email(), 
      GetArena());
  }
  if (from._internal_has_created_at()) {
    created_at_ = new PROTOBUF_NAMESPACE_ID::Timestamp(*from.created_at_);
  } else {
    created_at_ = nullptr;
  }
  if (from._internal_has_updated_at()) {
    updated_at_ = new PROTOBUF_NAMESPACE_ID::Timestamp(*from.updated_at_);
  } else {
    updated_at_ = nullptr;
  }
  if (from._internal_has_phone()) {
    phone_ = new ::Workstream::Protocol::Common::Phone(*from.phone_);
  } else {
    phone_ = nullptr;
  }
  ::memcpy(&id_, &from.id_,
    static_cast<size_t>(reinterpret_cast<char*>(&status_) -
    reinterpret_cast<char*>(&id_)) + sizeof(status_));
  // @@protoc_insertion_point(copy_constructor:Workstream.Protocol.Onboarding.CompanyStaffEvent)
}

void CompanyStaffEvent::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_CompanyStaffEvent_Onboarding_2eproto.base);
  uuid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  email_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
      reinterpret_cast<char*>(&created_at_) - reinterpret_cast<char*>(this)),
      0, static_cast<size_t>(reinterpret_cast<char*>(&status_) -
      reinterpret_cast<char*>(&created_at_)) + sizeof(status_));
}

CompanyStaffEvent::~CompanyStaffEvent() {
  // @@protoc_insertion_point(destructor:Workstream.Protocol.Onboarding.CompanyStaffEvent)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void CompanyStaffEvent::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  uuid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  email_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete created_at_;
  if (this != internal_default_instance()) delete updated_at_;
  if (this != internal_default_instance()) delete phone_;
}

void CompanyStaffEvent::ArenaDtor(void* object) {
  CompanyStaffEvent* _this = reinterpret_cast< CompanyStaffEvent* >(object);
  (void)_this;
}
void CompanyStaffEvent::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CompanyStaffEvent::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CompanyStaffEvent& CompanyStaffEvent::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_CompanyStaffEvent_Onboarding_2eproto.base);
  return *internal_default_instance();
}


void CompanyStaffEvent::Clear() {
// @@protoc_insertion_point(message_clear_start:Workstream.Protocol.Onboarding.CompanyStaffEvent)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  uuid_.ClearToEmpty();
  name_.ClearToEmpty();
  email_.ClearToEmpty();
  if (GetArena() == nullptr && created_at_ != nullptr) {
    delete created_at_;
  }
  created_at_ = nullptr;
  if (GetArena() == nullptr && updated_at_ != nullptr) {
    delete updated_at_;
  }
  updated_at_ = nullptr;
  if (GetArena() == nullptr && phone_ != nullptr) {
    delete phone_;
  }
  phone_ = nullptr;
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&status_) -
      reinterpret_cast<char*>(&id_)) + sizeof(status_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CompanyStaffEvent::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string uuid = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_uuid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "Workstream.Protocol.Onboarding.CompanyStaffEvent.uuid"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int64 id = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .google.protobuf.Timestamp created_at = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_created_at(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .google.protobuf.Timestamp updated_at = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_updated_at(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .Workstream.Protocol.Onboarding.CompanyStaffEvent.CompanyStaffStatus status = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 40)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_status(static_cast<::Workstream::Protocol::Onboarding::CompanyStaffEvent_CompanyStaffStatus>(val));
        } else goto handle_unusual;
        continue;
      // int64 company_id = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 48)) {
          company_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string name = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 58)) {
          auto str = _internal_mutable_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "Workstream.Protocol.Onboarding.CompanyStaffEvent.name"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string email = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 66)) {
          auto str = _internal_mutable_email();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "Workstream.Protocol.Onboarding.CompanyStaffEvent.email"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .Workstream.Protocol.Common.Phone phone = 9;
      case 9:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 74)) {
          ptr = ctx->ParseMessage(_internal_mutable_phone(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CompanyStaffEvent::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Workstream.Protocol.Onboarding.CompanyStaffEvent)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string uuid = 1;
  if (this->uuid().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_uuid().data(), static_cast<int>(this->_internal_uuid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "Workstream.Protocol.Onboarding.CompanyStaffEvent.uuid");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_uuid(), target);
  }

  // int64 id = 2;
  if (this->id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(2, this->_internal_id(), target);
  }

  // .google.protobuf.Timestamp created_at = 3;
  if (this->has_created_at()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        3, _Internal::created_at(this), target, stream);
  }

  // .google.protobuf.Timestamp updated_at = 4;
  if (this->has_updated_at()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        4, _Internal::updated_at(this), target, stream);
  }

  // .Workstream.Protocol.Onboarding.CompanyStaffEvent.CompanyStaffStatus status = 5;
  if (this->status() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      5, this->_internal_status(), target);
  }

  // int64 company_id = 6;
  if (this->company_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(6, this->_internal_company_id(), target);
  }

  // string name = 7;
  if (this->name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "Workstream.Protocol.Onboarding.CompanyStaffEvent.name");
    target = stream->WriteStringMaybeAliased(
        7, this->_internal_name(), target);
  }

  // string email = 8;
  if (this->email().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_email().data(), static_cast<int>(this->_internal_email().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "Workstream.Protocol.Onboarding.CompanyStaffEvent.email");
    target = stream->WriteStringMaybeAliased(
        8, this->_internal_email(), target);
  }

  // .Workstream.Protocol.Common.Phone phone = 9;
  if (this->has_phone()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        9, _Internal::phone(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Workstream.Protocol.Onboarding.CompanyStaffEvent)
  return target;
}

size_t CompanyStaffEvent::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Workstream.Protocol.Onboarding.CompanyStaffEvent)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string uuid = 1;
  if (this->uuid().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_uuid());
  }

  // string name = 7;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  // string email = 8;
  if (this->email().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_email());
  }

  // .google.protobuf.Timestamp created_at = 3;
  if (this->has_created_at()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *created_at_);
  }

  // .google.protobuf.Timestamp updated_at = 4;
  if (this->has_updated_at()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *updated_at_);
  }

  // .Workstream.Protocol.Common.Phone phone = 9;
  if (this->has_phone()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *phone_);
  }

  // int64 id = 2;
  if (this->id() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_id());
  }

  // int64 company_id = 6;
  if (this->company_id() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_company_id());
  }

  // .Workstream.Protocol.Onboarding.CompanyStaffEvent.CompanyStaffStatus status = 5;
  if (this->status() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_status());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CompanyStaffEvent::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Workstream.Protocol.Onboarding.CompanyStaffEvent)
  GOOGLE_DCHECK_NE(&from, this);
  const CompanyStaffEvent* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CompanyStaffEvent>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Workstream.Protocol.Onboarding.CompanyStaffEvent)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Workstream.Protocol.Onboarding.CompanyStaffEvent)
    MergeFrom(*source);
  }
}

void CompanyStaffEvent::MergeFrom(const CompanyStaffEvent& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Workstream.Protocol.Onboarding.CompanyStaffEvent)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.uuid().size() > 0) {
    _internal_set_uuid(from._internal_uuid());
  }
  if (from.name().size() > 0) {
    _internal_set_name(from._internal_name());
  }
  if (from.email().size() > 0) {
    _internal_set_email(from._internal_email());
  }
  if (from.has_created_at()) {
    _internal_mutable_created_at()->PROTOBUF_NAMESPACE_ID::Timestamp::MergeFrom(from._internal_created_at());
  }
  if (from.has_updated_at()) {
    _internal_mutable_updated_at()->PROTOBUF_NAMESPACE_ID::Timestamp::MergeFrom(from._internal_updated_at());
  }
  if (from.has_phone()) {
    _internal_mutable_phone()->::Workstream::Protocol::Common::Phone::MergeFrom(from._internal_phone());
  }
  if (from.id() != 0) {
    _internal_set_id(from._internal_id());
  }
  if (from.company_id() != 0) {
    _internal_set_company_id(from._internal_company_id());
  }
  if (from.status() != 0) {
    _internal_set_status(from._internal_status());
  }
}

void CompanyStaffEvent::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Workstream.Protocol.Onboarding.CompanyStaffEvent)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CompanyStaffEvent::CopyFrom(const CompanyStaffEvent& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Workstream.Protocol.Onboarding.CompanyStaffEvent)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CompanyStaffEvent::IsInitialized() const {
  return true;
}

void CompanyStaffEvent::InternalSwap(CompanyStaffEvent* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  uuid_.Swap(&other->uuid_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  name_.Swap(&other->name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  email_.Swap(&other->email_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CompanyStaffEvent, status_)
      + sizeof(CompanyStaffEvent::status_)
      - PROTOBUF_FIELD_OFFSET(CompanyStaffEvent, created_at_)>(
          reinterpret_cast<char*>(&created_at_),
          reinterpret_cast<char*>(&other->created_at_));
}

::PROTOBUF_NAMESPACE_ID::Metadata CompanyStaffEvent::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class EmergencyContact::_Internal {
 public:
  static const ::Workstream::Protocol::Common::Address& address(const EmergencyContact* msg);
};

const ::Workstream::Protocol::Common::Address&
EmergencyContact::_Internal::address(const EmergencyContact* msg) {
  return *msg->address_;
}
void EmergencyContact::clear_address() {
  if (GetArena() == nullptr && address_ != nullptr) {
    delete address_;
  }
  address_ = nullptr;
}
EmergencyContact::EmergencyContact(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:Workstream.Protocol.Onboarding.EmergencyContact)
}
EmergencyContact::EmergencyContact(const EmergencyContact& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  relationship_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_relationship().empty()) {
    relationship_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_relationship(), 
      GetArena());
  }
  first_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_first_name().empty()) {
    first_name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_first_name(), 
      GetArena());
  }
  last_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_last_name().empty()) {
    last_name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_last_name(), 
      GetArena());
  }
  home_phone_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_home_phone().empty()) {
    home_phone_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_home_phone(), 
      GetArena());
  }
  work_phone_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_work_phone().empty()) {
    work_phone_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_work_phone(), 
      GetArena());
  }
  email_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_email().empty()) {
    email_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_email(), 
      GetArena());
  }
  if (from._internal_has_address()) {
    address_ = new ::Workstream::Protocol::Common::Address(*from.address_);
  } else {
    address_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:Workstream.Protocol.Onboarding.EmergencyContact)
}

void EmergencyContact::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_EmergencyContact_Onboarding_2eproto.base);
  relationship_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  first_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  last_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  home_phone_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  work_phone_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  email_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  address_ = nullptr;
}

EmergencyContact::~EmergencyContact() {
  // @@protoc_insertion_point(destructor:Workstream.Protocol.Onboarding.EmergencyContact)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void EmergencyContact::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  relationship_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  first_name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  last_name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  home_phone_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  work_phone_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  email_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete address_;
}

void EmergencyContact::ArenaDtor(void* object) {
  EmergencyContact* _this = reinterpret_cast< EmergencyContact* >(object);
  (void)_this;
}
void EmergencyContact::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void EmergencyContact::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const EmergencyContact& EmergencyContact::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_EmergencyContact_Onboarding_2eproto.base);
  return *internal_default_instance();
}


void EmergencyContact::Clear() {
// @@protoc_insertion_point(message_clear_start:Workstream.Protocol.Onboarding.EmergencyContact)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  relationship_.ClearToEmpty();
  first_name_.ClearToEmpty();
  last_name_.ClearToEmpty();
  home_phone_.ClearToEmpty();
  work_phone_.ClearToEmpty();
  email_.ClearToEmpty();
  if (GetArena() == nullptr && address_ != nullptr) {
    delete address_;
  }
  address_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* EmergencyContact::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string relationship = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_relationship();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "Workstream.Protocol.Onboarding.EmergencyContact.relationship"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string first_name = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_first_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "Workstream.Protocol.Onboarding.EmergencyContact.first_name"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string last_name = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_last_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "Workstream.Protocol.Onboarding.EmergencyContact.last_name"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string home_phone = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          auto str = _internal_mutable_home_phone();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "Workstream.Protocol.Onboarding.EmergencyContact.home_phone"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string work_phone = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          auto str = _internal_mutable_work_phone();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "Workstream.Protocol.Onboarding.EmergencyContact.work_phone"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string email = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 50)) {
          auto str = _internal_mutable_email();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "Workstream.Protocol.Onboarding.EmergencyContact.email"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .Workstream.Protocol.Common.Address address = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 58)) {
          ptr = ctx->ParseMessage(_internal_mutable_address(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* EmergencyContact::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Workstream.Protocol.Onboarding.EmergencyContact)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string relationship = 1;
  if (this->relationship().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_relationship().data(), static_cast<int>(this->_internal_relationship().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "Workstream.Protocol.Onboarding.EmergencyContact.relationship");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_relationship(), target);
  }

  // string first_name = 2;
  if (this->first_name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_first_name().data(), static_cast<int>(this->_internal_first_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "Workstream.Protocol.Onboarding.EmergencyContact.first_name");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_first_name(), target);
  }

  // string last_name = 3;
  if (this->last_name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_last_name().data(), static_cast<int>(this->_internal_last_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "Workstream.Protocol.Onboarding.EmergencyContact.last_name");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_last_name(), target);
  }

  // string home_phone = 4;
  if (this->home_phone().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_home_phone().data(), static_cast<int>(this->_internal_home_phone().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "Workstream.Protocol.Onboarding.EmergencyContact.home_phone");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_home_phone(), target);
  }

  // string work_phone = 5;
  if (this->work_phone().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_work_phone().data(), static_cast<int>(this->_internal_work_phone().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "Workstream.Protocol.Onboarding.EmergencyContact.work_phone");
    target = stream->WriteStringMaybeAliased(
        5, this->_internal_work_phone(), target);
  }

  // string email = 6;
  if (this->email().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_email().data(), static_cast<int>(this->_internal_email().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "Workstream.Protocol.Onboarding.EmergencyContact.email");
    target = stream->WriteStringMaybeAliased(
        6, this->_internal_email(), target);
  }

  // .Workstream.Protocol.Common.Address address = 7;
  if (this->has_address()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        7, _Internal::address(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Workstream.Protocol.Onboarding.EmergencyContact)
  return target;
}

size_t EmergencyContact::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Workstream.Protocol.Onboarding.EmergencyContact)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string relationship = 1;
  if (this->relationship().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_relationship());
  }

  // string first_name = 2;
  if (this->first_name().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_first_name());
  }

  // string last_name = 3;
  if (this->last_name().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_last_name());
  }

  // string home_phone = 4;
  if (this->home_phone().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_home_phone());
  }

  // string work_phone = 5;
  if (this->work_phone().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_work_phone());
  }

  // string email = 6;
  if (this->email().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_email());
  }

  // .Workstream.Protocol.Common.Address address = 7;
  if (this->has_address()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *address_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void EmergencyContact::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Workstream.Protocol.Onboarding.EmergencyContact)
  GOOGLE_DCHECK_NE(&from, this);
  const EmergencyContact* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<EmergencyContact>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Workstream.Protocol.Onboarding.EmergencyContact)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Workstream.Protocol.Onboarding.EmergencyContact)
    MergeFrom(*source);
  }
}

void EmergencyContact::MergeFrom(const EmergencyContact& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Workstream.Protocol.Onboarding.EmergencyContact)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.relationship().size() > 0) {
    _internal_set_relationship(from._internal_relationship());
  }
  if (from.first_name().size() > 0) {
    _internal_set_first_name(from._internal_first_name());
  }
  if (from.last_name().size() > 0) {
    _internal_set_last_name(from._internal_last_name());
  }
  if (from.home_phone().size() > 0) {
    _internal_set_home_phone(from._internal_home_phone());
  }
  if (from.work_phone().size() > 0) {
    _internal_set_work_phone(from._internal_work_phone());
  }
  if (from.email().size() > 0) {
    _internal_set_email(from._internal_email());
  }
  if (from.has_address()) {
    _internal_mutable_address()->::Workstream::Protocol::Common::Address::MergeFrom(from._internal_address());
  }
}

void EmergencyContact::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Workstream.Protocol.Onboarding.EmergencyContact)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void EmergencyContact::CopyFrom(const EmergencyContact& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Workstream.Protocol.Onboarding.EmergencyContact)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EmergencyContact::IsInitialized() const {
  return true;
}

void EmergencyContact::InternalSwap(EmergencyContact* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  relationship_.Swap(&other->relationship_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  first_name_.Swap(&other->first_name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  last_name_.Swap(&other->last_name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  home_phone_.Swap(&other->home_phone_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  work_phone_.Swap(&other->work_phone_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  email_.Swap(&other->email_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(address_, other->address_);
}

::PROTOBUF_NAMESPACE_ID::Metadata EmergencyContact::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class EmployeeInformationEvent::_Internal {
 public:
  static const PROTOBUF_NAMESPACE_ID::Timestamp& created_at(const EmployeeInformationEvent* msg);
  static const PROTOBUF_NAMESPACE_ID::Timestamp& updated_at(const EmployeeInformationEvent* msg);
  static const ::Workstream::Protocol::Common::Phone& home_phone(const EmployeeInformationEvent* msg);
  static const ::Workstream::Protocol::Common::Address& home_address(const EmployeeInformationEvent* msg);
  static const ::Workstream::Protocol::Common::Phone& work_phone(const EmployeeInformationEvent* msg);
  static const ::Workstream::Protocol::Common::Address& work_address(const EmployeeInformationEvent* msg);
};

const PROTOBUF_NAMESPACE_ID::Timestamp&
EmployeeInformationEvent::_Internal::created_at(const EmployeeInformationEvent* msg) {
  return *msg->created_at_;
}
const PROTOBUF_NAMESPACE_ID::Timestamp&
EmployeeInformationEvent::_Internal::updated_at(const EmployeeInformationEvent* msg) {
  return *msg->updated_at_;
}
const ::Workstream::Protocol::Common::Phone&
EmployeeInformationEvent::_Internal::home_phone(const EmployeeInformationEvent* msg) {
  return *msg->home_phone_;
}
const ::Workstream::Protocol::Common::Address&
EmployeeInformationEvent::_Internal::home_address(const EmployeeInformationEvent* msg) {
  return *msg->home_address_;
}
const ::Workstream::Protocol::Common::Phone&
EmployeeInformationEvent::_Internal::work_phone(const EmployeeInformationEvent* msg) {
  return *msg->work_phone_;
}
const ::Workstream::Protocol::Common::Address&
EmployeeInformationEvent::_Internal::work_address(const EmployeeInformationEvent* msg) {
  return *msg->work_address_;
}
void EmployeeInformationEvent::clear_created_at() {
  if (GetArena() == nullptr && created_at_ != nullptr) {
    delete created_at_;
  }
  created_at_ = nullptr;
}
void EmployeeInformationEvent::clear_updated_at() {
  if (GetArena() == nullptr && updated_at_ != nullptr) {
    delete updated_at_;
  }
  updated_at_ = nullptr;
}
void EmployeeInformationEvent::clear_home_phone() {
  if (GetArena() == nullptr && home_phone_ != nullptr) {
    delete home_phone_;
  }
  home_phone_ = nullptr;
}
void EmployeeInformationEvent::clear_home_address() {
  if (GetArena() == nullptr && home_address_ != nullptr) {
    delete home_address_;
  }
  home_address_ = nullptr;
}
void EmployeeInformationEvent::clear_work_phone() {
  if (GetArena() == nullptr && work_phone_ != nullptr) {
    delete work_phone_;
  }
  work_phone_ = nullptr;
}
void EmployeeInformationEvent::clear_work_address() {
  if (GetArena() == nullptr && work_address_ != nullptr) {
    delete work_address_;
  }
  work_address_ = nullptr;
}
EmployeeInformationEvent::EmployeeInformationEvent(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  emergency_contact_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:Workstream.Protocol.Onboarding.EmployeeInformationEvent)
}
EmployeeInformationEvent::EmployeeInformationEvent(const EmployeeInformationEvent& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      emergency_contact_(from.emergency_contact_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  uuid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_uuid().empty()) {
    uuid_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_uuid(), 
      GetArena());
  }
  first_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_first_name().empty()) {
    first_name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_first_name(), 
      GetArena());
  }
  middle_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_middle_name().empty()) {
    middle_name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_middle_name(), 
      GetArena());
  }
  last_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_last_name().empty()) {
    last_name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_last_name(), 
      GetArena());
  }
  prior_last_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_prior_last_name().empty()) {
    prior_last_name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_prior_last_name(), 
      GetArena());
  }
  prefered_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_prefered_name().empty()) {
    prefered_name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_prefered_name(), 
      GetArena());
  }
  salutation_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_salutation().empty()) {
    salutation_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_salutation(), 
      GetArena());
  }
  ethnicity_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_ethnicity().empty()) {
    ethnicity_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_ethnicity(), 
      GetArena());
  }
  gender_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_gender().empty()) {
    gender_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_gender(), 
      GetArena());
  }
  ssn_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_ssn().empty()) {
    ssn_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_ssn(), 
      GetArena());
  }
  nationality_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_nationality().empty()) {
    nationality_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_nationality(), 
      GetArena());
  }
  date_of_birth_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_date_of_birth().empty()) {
    date_of_birth_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_date_of_birth(), 
      GetArena());
  }
  home_email_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_home_email().empty()) {
    home_email_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_home_email(), 
      GetArena());
  }
  work_location_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_work_location_name().empty()) {
    work_location_name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_work_location_name(), 
      GetArena());
  }
  work_email_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_work_email().empty()) {
    work_email_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_work_email(), 
      GetArena());
  }
  apply_date_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_apply_date().empty()) {
    apply_date_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_apply_date(), 
      GetArena());
  }
  hire_date_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_hire_date().empty()) {
    hire_date_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_hire_date(), 
      GetArena());
  }
  start_date_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_start_date().empty()) {
    start_date_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_start_date(), 
      GetArena());
  }
  termination_date_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_termination_date().empty()) {
    termination_date_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_termination_date(), 
      GetArena());
  }
  job_title_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_job_title().empty()) {
    job_title_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_job_title(), 
      GetArena());
  }
  department_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_department_name().empty()) {
    department_name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_department_name(), 
      GetArena());
  }
  if (from._internal_has_created_at()) {
    created_at_ = new PROTOBUF_NAMESPACE_ID::Timestamp(*from.created_at_);
  } else {
    created_at_ = nullptr;
  }
  if (from._internal_has_updated_at()) {
    updated_at_ = new PROTOBUF_NAMESPACE_ID::Timestamp(*from.updated_at_);
  } else {
    updated_at_ = nullptr;
  }
  if (from._internal_has_home_phone()) {
    home_phone_ = new ::Workstream::Protocol::Common::Phone(*from.home_phone_);
  } else {
    home_phone_ = nullptr;
  }
  if (from._internal_has_home_address()) {
    home_address_ = new ::Workstream::Protocol::Common::Address(*from.home_address_);
  } else {
    home_address_ = nullptr;
  }
  if (from._internal_has_work_phone()) {
    work_phone_ = new ::Workstream::Protocol::Common::Phone(*from.work_phone_);
  } else {
    work_phone_ = nullptr;
  }
  if (from._internal_has_work_address()) {
    work_address_ = new ::Workstream::Protocol::Common::Address(*from.work_address_);
  } else {
    work_address_ = nullptr;
  }
  ::memcpy(&id_, &from.id_,
    static_cast<size_t>(reinterpret_cast<char*>(&smoker_) -
    reinterpret_cast<char*>(&id_)) + sizeof(smoker_));
  // @@protoc_insertion_point(copy_constructor:Workstream.Protocol.Onboarding.EmployeeInformationEvent)
}

void EmployeeInformationEvent::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_EmployeeInformationEvent_Onboarding_2eproto.base);
  uuid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  first_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  middle_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  last_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  prior_last_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  prefered_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  salutation_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ethnicity_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  gender_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ssn_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  nationality_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  date_of_birth_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  home_email_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  work_location_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  work_email_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  apply_date_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  hire_date_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  start_date_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  termination_date_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  job_title_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  department_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
      reinterpret_cast<char*>(&created_at_) - reinterpret_cast<char*>(this)),
      0, static_cast<size_t>(reinterpret_cast<char*>(&smoker_) -
      reinterpret_cast<char*>(&created_at_)) + sizeof(smoker_));
}

EmployeeInformationEvent::~EmployeeInformationEvent() {
  // @@protoc_insertion_point(destructor:Workstream.Protocol.Onboarding.EmployeeInformationEvent)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void EmployeeInformationEvent::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  uuid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  first_name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  middle_name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  last_name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  prior_last_name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  prefered_name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  salutation_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ethnicity_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  gender_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ssn_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  nationality_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  date_of_birth_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  home_email_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  work_location_name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  work_email_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  apply_date_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  hire_date_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  start_date_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  termination_date_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  job_title_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  department_name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete created_at_;
  if (this != internal_default_instance()) delete updated_at_;
  if (this != internal_default_instance()) delete home_phone_;
  if (this != internal_default_instance()) delete home_address_;
  if (this != internal_default_instance()) delete work_phone_;
  if (this != internal_default_instance()) delete work_address_;
}

void EmployeeInformationEvent::ArenaDtor(void* object) {
  EmployeeInformationEvent* _this = reinterpret_cast< EmployeeInformationEvent* >(object);
  (void)_this;
}
void EmployeeInformationEvent::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void EmployeeInformationEvent::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const EmployeeInformationEvent& EmployeeInformationEvent::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_EmployeeInformationEvent_Onboarding_2eproto.base);
  return *internal_default_instance();
}


void EmployeeInformationEvent::Clear() {
// @@protoc_insertion_point(message_clear_start:Workstream.Protocol.Onboarding.EmployeeInformationEvent)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  emergency_contact_.Clear();
  uuid_.ClearToEmpty();
  first_name_.ClearToEmpty();
  middle_name_.ClearToEmpty();
  last_name_.ClearToEmpty();
  prior_last_name_.ClearToEmpty();
  prefered_name_.ClearToEmpty();
  salutation_.ClearToEmpty();
  ethnicity_.ClearToEmpty();
  gender_.ClearToEmpty();
  ssn_.ClearToEmpty();
  nationality_.ClearToEmpty();
  date_of_birth_.ClearToEmpty();
  home_email_.ClearToEmpty();
  work_location_name_.ClearToEmpty();
  work_email_.ClearToEmpty();
  apply_date_.ClearToEmpty();
  hire_date_.ClearToEmpty();
  start_date_.ClearToEmpty();
  termination_date_.ClearToEmpty();
  job_title_.ClearToEmpty();
  department_name_.ClearToEmpty();
  if (GetArena() == nullptr && created_at_ != nullptr) {
    delete created_at_;
  }
  created_at_ = nullptr;
  if (GetArena() == nullptr && updated_at_ != nullptr) {
    delete updated_at_;
  }
  updated_at_ = nullptr;
  if (GetArena() == nullptr && home_phone_ != nullptr) {
    delete home_phone_;
  }
  home_phone_ = nullptr;
  if (GetArena() == nullptr && home_address_ != nullptr) {
    delete home_address_;
  }
  home_address_ = nullptr;
  if (GetArena() == nullptr && work_phone_ != nullptr) {
    delete work_phone_;
  }
  work_phone_ = nullptr;
  if (GetArena() == nullptr && work_address_ != nullptr) {
    delete work_address_;
  }
  work_address_ = nullptr;
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&smoker_) -
      reinterpret_cast<char*>(&id_)) + sizeof(smoker_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* EmployeeInformationEvent::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string uuid = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_uuid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "Workstream.Protocol.Onboarding.EmployeeInformationEvent.uuid"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int64 id = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .google.protobuf.Timestamp created_at = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_created_at(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .google.protobuf.Timestamp updated_at = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_updated_at(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int64 company_id = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 40)) {
          company_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int64 employee_id = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 48)) {
          employee_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string first_name = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 58)) {
          auto str = _internal_mutable_first_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "Workstream.Protocol.Onboarding.EmployeeInformationEvent.first_name"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string middle_name = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 66)) {
          auto str = _internal_mutable_middle_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "Workstream.Protocol.Onboarding.EmployeeInformationEvent.middle_name"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string last_name = 9;
      case 9:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 74)) {
          auto str = _internal_mutable_last_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "Workstream.Protocol.Onboarding.EmployeeInformationEvent.last_name"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string prior_last_name = 10;
      case 10:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 82)) {
          auto str = _internal_mutable_prior_last_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "Workstream.Protocol.Onboarding.EmployeeInformationEvent.prior_last_name"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string prefered_name = 11;
      case 11:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 90)) {
          auto str = _internal_mutable_prefered_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "Workstream.Protocol.Onboarding.EmployeeInformationEvent.prefered_name"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string salutation = 12;
      case 12:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 98)) {
          auto str = _internal_mutable_salutation();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "Workstream.Protocol.Onboarding.EmployeeInformationEvent.salutation"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string ethnicity = 13;
      case 13:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 106)) {
          auto str = _internal_mutable_ethnicity();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "Workstream.Protocol.Onboarding.EmployeeInformationEvent.ethnicity"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string gender = 14;
      case 14:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 114)) {
          auto str = _internal_mutable_gender();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "Workstream.Protocol.Onboarding.EmployeeInformationEvent.gender"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .Workstream.Protocol.Onboarding.MaritalStatus marital_status = 15;
      case 15:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 120)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_marital_status(static_cast<::Workstream::Protocol::Onboarding::MaritalStatus>(val));
        } else goto handle_unusual;
        continue;
      // string ssn = 16;
      case 16:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 130)) {
          auto str = _internal_mutable_ssn();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "Workstream.Protocol.Onboarding.EmployeeInformationEvent.ssn"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bool smoker = 17;
      case 17:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 136)) {
          smoker_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string nationality = 18;
      case 18:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 146)) {
          auto str = _internal_mutable_nationality();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "Workstream.Protocol.Onboarding.EmployeeInformationEvent.nationality"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string date_of_birth = 19;
      case 19:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 154)) {
          auto str = _internal_mutable_date_of_birth();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "Workstream.Protocol.Onboarding.EmployeeInformationEvent.date_of_birth"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string home_email = 31;
      case 31:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 250)) {
          auto str = _internal_mutable_home_email();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "Workstream.Protocol.Onboarding.EmployeeInformationEvent.home_email"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .Workstream.Protocol.Common.Phone home_phone = 32;
      case 32:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 2)) {
          ptr = ctx->ParseMessage(_internal_mutable_home_phone(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .Workstream.Protocol.Common.Address home_address = 33;
      case 33:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_home_address(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string work_location_name = 41;
      case 41:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 74)) {
          auto str = _internal_mutable_work_location_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "Workstream.Protocol.Onboarding.EmployeeInformationEvent.work_location_name"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string work_email = 42;
      case 42:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 82)) {
          auto str = _internal_mutable_work_email();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "Workstream.Protocol.Onboarding.EmployeeInformationEvent.work_email"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .Workstream.Protocol.Common.Phone work_phone = 43;
      case 43:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 90)) {
          ptr = ctx->ParseMessage(_internal_mutable_work_phone(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .Workstream.Protocol.Common.Address work_address = 44;
      case 44:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 98)) {
          ptr = ctx->ParseMessage(_internal_mutable_work_address(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated .Workstream.Protocol.Onboarding.EmergencyContact emergency_contact = 51;
      case 51:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 154)) {
          ptr -= 2;
          do {
            ptr += 2;
            ptr = ctx->ParseMessage(_internal_add_emergency_contact(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<410>(ptr));
        } else goto handle_unusual;
        continue;
      // string apply_date = 52;
      case 52:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 162)) {
          auto str = _internal_mutable_apply_date();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "Workstream.Protocol.Onboarding.EmployeeInformationEvent.apply_date"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string hire_date = 53;
      case 53:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 170)) {
          auto str = _internal_mutable_hire_date();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "Workstream.Protocol.Onboarding.EmployeeInformationEvent.hire_date"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string start_date = 54;
      case 54:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 178)) {
          auto str = _internal_mutable_start_date();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "Workstream.Protocol.Onboarding.EmployeeInformationEvent.start_date"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string termination_date = 55;
      case 55:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 186)) {
          auto str = _internal_mutable_termination_date();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "Workstream.Protocol.Onboarding.EmployeeInformationEvent.termination_date"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string job_title = 56;
      case 56:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 194)) {
          auto str = _internal_mutable_job_title();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "Workstream.Protocol.Onboarding.EmployeeInformationEvent.job_title"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string department_name = 57;
      case 57:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 202)) {
          auto str = _internal_mutable_department_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "Workstream.Protocol.Onboarding.EmployeeInformationEvent.department_name"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* EmployeeInformationEvent::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Workstream.Protocol.Onboarding.EmployeeInformationEvent)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string uuid = 1;
  if (this->uuid().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_uuid().data(), static_cast<int>(this->_internal_uuid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "Workstream.Protocol.Onboarding.EmployeeInformationEvent.uuid");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_uuid(), target);
  }

  // int64 id = 2;
  if (this->id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(2, this->_internal_id(), target);
  }

  // .google.protobuf.Timestamp created_at = 3;
  if (this->has_created_at()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        3, _Internal::created_at(this), target, stream);
  }

  // .google.protobuf.Timestamp updated_at = 4;
  if (this->has_updated_at()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        4, _Internal::updated_at(this), target, stream);
  }

  // int64 company_id = 5;
  if (this->company_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(5, this->_internal_company_id(), target);
  }

  // int64 employee_id = 6;
  if (this->employee_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(6, this->_internal_employee_id(), target);
  }

  // string first_name = 7;
  if (this->first_name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_first_name().data(), static_cast<int>(this->_internal_first_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "Workstream.Protocol.Onboarding.EmployeeInformationEvent.first_name");
    target = stream->WriteStringMaybeAliased(
        7, this->_internal_first_name(), target);
  }

  // string middle_name = 8;
  if (this->middle_name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_middle_name().data(), static_cast<int>(this->_internal_middle_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "Workstream.Protocol.Onboarding.EmployeeInformationEvent.middle_name");
    target = stream->WriteStringMaybeAliased(
        8, this->_internal_middle_name(), target);
  }

  // string last_name = 9;
  if (this->last_name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_last_name().data(), static_cast<int>(this->_internal_last_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "Workstream.Protocol.Onboarding.EmployeeInformationEvent.last_name");
    target = stream->WriteStringMaybeAliased(
        9, this->_internal_last_name(), target);
  }

  // string prior_last_name = 10;
  if (this->prior_last_name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_prior_last_name().data(), static_cast<int>(this->_internal_prior_last_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "Workstream.Protocol.Onboarding.EmployeeInformationEvent.prior_last_name");
    target = stream->WriteStringMaybeAliased(
        10, this->_internal_prior_last_name(), target);
  }

  // string prefered_name = 11;
  if (this->prefered_name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_prefered_name().data(), static_cast<int>(this->_internal_prefered_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "Workstream.Protocol.Onboarding.EmployeeInformationEvent.prefered_name");
    target = stream->WriteStringMaybeAliased(
        11, this->_internal_prefered_name(), target);
  }

  // string salutation = 12;
  if (this->salutation().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_salutation().data(), static_cast<int>(this->_internal_salutation().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "Workstream.Protocol.Onboarding.EmployeeInformationEvent.salutation");
    target = stream->WriteStringMaybeAliased(
        12, this->_internal_salutation(), target);
  }

  // string ethnicity = 13;
  if (this->ethnicity().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_ethnicity().data(), static_cast<int>(this->_internal_ethnicity().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "Workstream.Protocol.Onboarding.EmployeeInformationEvent.ethnicity");
    target = stream->WriteStringMaybeAliased(
        13, this->_internal_ethnicity(), target);
  }

  // string gender = 14;
  if (this->gender().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_gender().data(), static_cast<int>(this->_internal_gender().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "Workstream.Protocol.Onboarding.EmployeeInformationEvent.gender");
    target = stream->WriteStringMaybeAliased(
        14, this->_internal_gender(), target);
  }

  // .Workstream.Protocol.Onboarding.MaritalStatus marital_status = 15;
  if (this->marital_status() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      15, this->_internal_marital_status(), target);
  }

  // string ssn = 16;
  if (this->ssn().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_ssn().data(), static_cast<int>(this->_internal_ssn().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "Workstream.Protocol.Onboarding.EmployeeInformationEvent.ssn");
    target = stream->WriteStringMaybeAliased(
        16, this->_internal_ssn(), target);
  }

  // bool smoker = 17;
  if (this->smoker() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(17, this->_internal_smoker(), target);
  }

  // string nationality = 18;
  if (this->nationality().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_nationality().data(), static_cast<int>(this->_internal_nationality().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "Workstream.Protocol.Onboarding.EmployeeInformationEvent.nationality");
    target = stream->WriteStringMaybeAliased(
        18, this->_internal_nationality(), target);
  }

  // string date_of_birth = 19;
  if (this->date_of_birth().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_date_of_birth().data(), static_cast<int>(this->_internal_date_of_birth().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "Workstream.Protocol.Onboarding.EmployeeInformationEvent.date_of_birth");
    target = stream->WriteStringMaybeAliased(
        19, this->_internal_date_of_birth(), target);
  }

  // string home_email = 31;
  if (this->home_email().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_home_email().data(), static_cast<int>(this->_internal_home_email().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "Workstream.Protocol.Onboarding.EmployeeInformationEvent.home_email");
    target = stream->WriteStringMaybeAliased(
        31, this->_internal_home_email(), target);
  }

  // .Workstream.Protocol.Common.Phone home_phone = 32;
  if (this->has_home_phone()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        32, _Internal::home_phone(this), target, stream);
  }

  // .Workstream.Protocol.Common.Address home_address = 33;
  if (this->has_home_address()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        33, _Internal::home_address(this), target, stream);
  }

  // string work_location_name = 41;
  if (this->work_location_name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_work_location_name().data(), static_cast<int>(this->_internal_work_location_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "Workstream.Protocol.Onboarding.EmployeeInformationEvent.work_location_name");
    target = stream->WriteStringMaybeAliased(
        41, this->_internal_work_location_name(), target);
  }

  // string work_email = 42;
  if (this->work_email().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_work_email().data(), static_cast<int>(this->_internal_work_email().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "Workstream.Protocol.Onboarding.EmployeeInformationEvent.work_email");
    target = stream->WriteStringMaybeAliased(
        42, this->_internal_work_email(), target);
  }

  // .Workstream.Protocol.Common.Phone work_phone = 43;
  if (this->has_work_phone()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        43, _Internal::work_phone(this), target, stream);
  }

  // .Workstream.Protocol.Common.Address work_address = 44;
  if (this->has_work_address()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        44, _Internal::work_address(this), target, stream);
  }

  // repeated .Workstream.Protocol.Onboarding.EmergencyContact emergency_contact = 51;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_emergency_contact_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(51, this->_internal_emergency_contact(i), target, stream);
  }

  // string apply_date = 52;
  if (this->apply_date().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_apply_date().data(), static_cast<int>(this->_internal_apply_date().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "Workstream.Protocol.Onboarding.EmployeeInformationEvent.apply_date");
    target = stream->WriteStringMaybeAliased(
        52, this->_internal_apply_date(), target);
  }

  // string hire_date = 53;
  if (this->hire_date().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_hire_date().data(), static_cast<int>(this->_internal_hire_date().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "Workstream.Protocol.Onboarding.EmployeeInformationEvent.hire_date");
    target = stream->WriteStringMaybeAliased(
        53, this->_internal_hire_date(), target);
  }

  // string start_date = 54;
  if (this->start_date().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_start_date().data(), static_cast<int>(this->_internal_start_date().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "Workstream.Protocol.Onboarding.EmployeeInformationEvent.start_date");
    target = stream->WriteStringMaybeAliased(
        54, this->_internal_start_date(), target);
  }

  // string termination_date = 55;
  if (this->termination_date().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_termination_date().data(), static_cast<int>(this->_internal_termination_date().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "Workstream.Protocol.Onboarding.EmployeeInformationEvent.termination_date");
    target = stream->WriteStringMaybeAliased(
        55, this->_internal_termination_date(), target);
  }

  // string job_title = 56;
  if (this->job_title().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_job_title().data(), static_cast<int>(this->_internal_job_title().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "Workstream.Protocol.Onboarding.EmployeeInformationEvent.job_title");
    target = stream->WriteStringMaybeAliased(
        56, this->_internal_job_title(), target);
  }

  // string department_name = 57;
  if (this->department_name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_department_name().data(), static_cast<int>(this->_internal_department_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "Workstream.Protocol.Onboarding.EmployeeInformationEvent.department_name");
    target = stream->WriteStringMaybeAliased(
        57, this->_internal_department_name(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Workstream.Protocol.Onboarding.EmployeeInformationEvent)
  return target;
}

size_t EmployeeInformationEvent::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Workstream.Protocol.Onboarding.EmployeeInformationEvent)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .Workstream.Protocol.Onboarding.EmergencyContact emergency_contact = 51;
  total_size += 2UL * this->_internal_emergency_contact_size();
  for (const auto& msg : this->emergency_contact_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // string uuid = 1;
  if (this->uuid().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_uuid());
  }

  // string first_name = 7;
  if (this->first_name().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_first_name());
  }

  // string middle_name = 8;
  if (this->middle_name().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_middle_name());
  }

  // string last_name = 9;
  if (this->last_name().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_last_name());
  }

  // string prior_last_name = 10;
  if (this->prior_last_name().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_prior_last_name());
  }

  // string prefered_name = 11;
  if (this->prefered_name().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_prefered_name());
  }

  // string salutation = 12;
  if (this->salutation().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_salutation());
  }

  // string ethnicity = 13;
  if (this->ethnicity().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_ethnicity());
  }

  // string gender = 14;
  if (this->gender().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_gender());
  }

  // string ssn = 16;
  if (this->ssn().size() > 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_ssn());
  }

  // string nationality = 18;
  if (this->nationality().size() > 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_nationality());
  }

  // string date_of_birth = 19;
  if (this->date_of_birth().size() > 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_date_of_birth());
  }

  // string home_email = 31;
  if (this->home_email().size() > 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_home_email());
  }

  // string work_location_name = 41;
  if (this->work_location_name().size() > 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_work_location_name());
  }

  // string work_email = 42;
  if (this->work_email().size() > 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_work_email());
  }

  // string apply_date = 52;
  if (this->apply_date().size() > 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_apply_date());
  }

  // string hire_date = 53;
  if (this->hire_date().size() > 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_hire_date());
  }

  // string start_date = 54;
  if (this->start_date().size() > 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_start_date());
  }

  // string termination_date = 55;
  if (this->termination_date().size() > 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_termination_date());
  }

  // string job_title = 56;
  if (this->job_title().size() > 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_job_title());
  }

  // string department_name = 57;
  if (this->department_name().size() > 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_department_name());
  }

  // .google.protobuf.Timestamp created_at = 3;
  if (this->has_created_at()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *created_at_);
  }

  // .google.protobuf.Timestamp updated_at = 4;
  if (this->has_updated_at()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *updated_at_);
  }

  // .Workstream.Protocol.Common.Phone home_phone = 32;
  if (this->has_home_phone()) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *home_phone_);
  }

  // .Workstream.Protocol.Common.Address home_address = 33;
  if (this->has_home_address()) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *home_address_);
  }

  // .Workstream.Protocol.Common.Phone work_phone = 43;
  if (this->has_work_phone()) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *work_phone_);
  }

  // .Workstream.Protocol.Common.Address work_address = 44;
  if (this->has_work_address()) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *work_address_);
  }

  // int64 id = 2;
  if (this->id() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_id());
  }

  // int64 company_id = 5;
  if (this->company_id() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_company_id());
  }

  // int64 employee_id = 6;
  if (this->employee_id() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_employee_id());
  }

  // .Workstream.Protocol.Onboarding.MaritalStatus marital_status = 15;
  if (this->marital_status() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_marital_status());
  }

  // bool smoker = 17;
  if (this->smoker() != 0) {
    total_size += 2 + 1;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void EmployeeInformationEvent::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Workstream.Protocol.Onboarding.EmployeeInformationEvent)
  GOOGLE_DCHECK_NE(&from, this);
  const EmployeeInformationEvent* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<EmployeeInformationEvent>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Workstream.Protocol.Onboarding.EmployeeInformationEvent)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Workstream.Protocol.Onboarding.EmployeeInformationEvent)
    MergeFrom(*source);
  }
}

void EmployeeInformationEvent::MergeFrom(const EmployeeInformationEvent& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Workstream.Protocol.Onboarding.EmployeeInformationEvent)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  emergency_contact_.MergeFrom(from.emergency_contact_);
  if (from.uuid().size() > 0) {
    _internal_set_uuid(from._internal_uuid());
  }
  if (from.first_name().size() > 0) {
    _internal_set_first_name(from._internal_first_name());
  }
  if (from.middle_name().size() > 0) {
    _internal_set_middle_name(from._internal_middle_name());
  }
  if (from.last_name().size() > 0) {
    _internal_set_last_name(from._internal_last_name());
  }
  if (from.prior_last_name().size() > 0) {
    _internal_set_prior_last_name(from._internal_prior_last_name());
  }
  if (from.prefered_name().size() > 0) {
    _internal_set_prefered_name(from._internal_prefered_name());
  }
  if (from.salutation().size() > 0) {
    _internal_set_salutation(from._internal_salutation());
  }
  if (from.ethnicity().size() > 0) {
    _internal_set_ethnicity(from._internal_ethnicity());
  }
  if (from.gender().size() > 0) {
    _internal_set_gender(from._internal_gender());
  }
  if (from.ssn().size() > 0) {
    _internal_set_ssn(from._internal_ssn());
  }
  if (from.nationality().size() > 0) {
    _internal_set_nationality(from._internal_nationality());
  }
  if (from.date_of_birth().size() > 0) {
    _internal_set_date_of_birth(from._internal_date_of_birth());
  }
  if (from.home_email().size() > 0) {
    _internal_set_home_email(from._internal_home_email());
  }
  if (from.work_location_name().size() > 0) {
    _internal_set_work_location_name(from._internal_work_location_name());
  }
  if (from.work_email().size() > 0) {
    _internal_set_work_email(from._internal_work_email());
  }
  if (from.apply_date().size() > 0) {
    _internal_set_apply_date(from._internal_apply_date());
  }
  if (from.hire_date().size() > 0) {
    _internal_set_hire_date(from._internal_hire_date());
  }
  if (from.start_date().size() > 0) {
    _internal_set_start_date(from._internal_start_date());
  }
  if (from.termination_date().size() > 0) {
    _internal_set_termination_date(from._internal_termination_date());
  }
  if (from.job_title().size() > 0) {
    _internal_set_job_title(from._internal_job_title());
  }
  if (from.department_name().size() > 0) {
    _internal_set_department_name(from._internal_department_name());
  }
  if (from.has_created_at()) {
    _internal_mutable_created_at()->PROTOBUF_NAMESPACE_ID::Timestamp::MergeFrom(from._internal_created_at());
  }
  if (from.has_updated_at()) {
    _internal_mutable_updated_at()->PROTOBUF_NAMESPACE_ID::Timestamp::MergeFrom(from._internal_updated_at());
  }
  if (from.has_home_phone()) {
    _internal_mutable_home_phone()->::Workstream::Protocol::Common::Phone::MergeFrom(from._internal_home_phone());
  }
  if (from.has_home_address()) {
    _internal_mutable_home_address()->::Workstream::Protocol::Common::Address::MergeFrom(from._internal_home_address());
  }
  if (from.has_work_phone()) {
    _internal_mutable_work_phone()->::Workstream::Protocol::Common::Phone::MergeFrom(from._internal_work_phone());
  }
  if (from.has_work_address()) {
    _internal_mutable_work_address()->::Workstream::Protocol::Common::Address::MergeFrom(from._internal_work_address());
  }
  if (from.id() != 0) {
    _internal_set_id(from._internal_id());
  }
  if (from.company_id() != 0) {
    _internal_set_company_id(from._internal_company_id());
  }
  if (from.employee_id() != 0) {
    _internal_set_employee_id(from._internal_employee_id());
  }
  if (from.marital_status() != 0) {
    _internal_set_marital_status(from._internal_marital_status());
  }
  if (from.smoker() != 0) {
    _internal_set_smoker(from._internal_smoker());
  }
}

void EmployeeInformationEvent::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Workstream.Protocol.Onboarding.EmployeeInformationEvent)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void EmployeeInformationEvent::CopyFrom(const EmployeeInformationEvent& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Workstream.Protocol.Onboarding.EmployeeInformationEvent)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EmployeeInformationEvent::IsInitialized() const {
  return true;
}

void EmployeeInformationEvent::InternalSwap(EmployeeInformationEvent* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  emergency_contact_.InternalSwap(&other->emergency_contact_);
  uuid_.Swap(&other->uuid_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  first_name_.Swap(&other->first_name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  middle_name_.Swap(&other->middle_name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  last_name_.Swap(&other->last_name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  prior_last_name_.Swap(&other->prior_last_name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  prefered_name_.Swap(&other->prefered_name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  salutation_.Swap(&other->salutation_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ethnicity_.Swap(&other->ethnicity_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  gender_.Swap(&other->gender_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ssn_.Swap(&other->ssn_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  nationality_.Swap(&other->nationality_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  date_of_birth_.Swap(&other->date_of_birth_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  home_email_.Swap(&other->home_email_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  work_location_name_.Swap(&other->work_location_name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  work_email_.Swap(&other->work_email_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  apply_date_.Swap(&other->apply_date_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  hire_date_.Swap(&other->hire_date_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  start_date_.Swap(&other->start_date_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  termination_date_.Swap(&other->termination_date_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  job_title_.Swap(&other->job_title_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  department_name_.Swap(&other->department_name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(EmployeeInformationEvent, smoker_)
      + sizeof(EmployeeInformationEvent::smoker_)
      - PROTOBUF_FIELD_OFFSET(EmployeeInformationEvent, created_at_)>(
          reinterpret_cast<char*>(&created_at_),
          reinterpret_cast<char*>(&other->created_at_));
}

::PROTOBUF_NAMESPACE_ID::Metadata EmployeeInformationEvent::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class EmployeeInitialStateEvent::_Internal {
 public:
  static const PROTOBUF_NAMESPACE_ID::Timestamp& created_at(const EmployeeInitialStateEvent* msg);
  static const PROTOBUF_NAMESPACE_ID::Timestamp& updated_at(const EmployeeInitialStateEvent* msg);
};

const PROTOBUF_NAMESPACE_ID::Timestamp&
EmployeeInitialStateEvent::_Internal::created_at(const EmployeeInitialStateEvent* msg) {
  return *msg->created_at_;
}
const PROTOBUF_NAMESPACE_ID::Timestamp&
EmployeeInitialStateEvent::_Internal::updated_at(const EmployeeInitialStateEvent* msg) {
  return *msg->updated_at_;
}
void EmployeeInitialStateEvent::clear_created_at() {
  if (GetArena() == nullptr && created_at_ != nullptr) {
    delete created_at_;
  }
  created_at_ = nullptr;
}
void EmployeeInitialStateEvent::clear_updated_at() {
  if (GetArena() == nullptr && updated_at_ != nullptr) {
    delete updated_at_;
  }
  updated_at_ = nullptr;
}
EmployeeInitialStateEvent::EmployeeInitialStateEvent(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:Workstream.Protocol.Onboarding.EmployeeInitialStateEvent)
}
EmployeeInitialStateEvent::EmployeeInitialStateEvent(const EmployeeInitialStateEvent& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  uuid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_uuid().empty()) {
    uuid_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_uuid(), 
      GetArena());
  }
  first_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_first_name().empty()) {
    first_name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_first_name(), 
      GetArena());
  }
  last_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_last_name().empty()) {
    last_name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_last_name(), 
      GetArena());
  }
  if (from._internal_has_created_at()) {
    created_at_ = new PROTOBUF_NAMESPACE_ID::Timestamp(*from.created_at_);
  } else {
    created_at_ = nullptr;
  }
  if (from._internal_has_updated_at()) {
    updated_at_ = new PROTOBUF_NAMESPACE_ID::Timestamp(*from.updated_at_);
  } else {
    updated_at_ = nullptr;
  }
  ::memcpy(&id_, &from.id_,
    static_cast<size_t>(reinterpret_cast<char*>(&employee_id_) -
    reinterpret_cast<char*>(&id_)) + sizeof(employee_id_));
  // @@protoc_insertion_point(copy_constructor:Workstream.Protocol.Onboarding.EmployeeInitialStateEvent)
}

void EmployeeInitialStateEvent::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_EmployeeInitialStateEvent_Onboarding_2eproto.base);
  uuid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  first_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  last_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
      reinterpret_cast<char*>(&created_at_) - reinterpret_cast<char*>(this)),
      0, static_cast<size_t>(reinterpret_cast<char*>(&employee_id_) -
      reinterpret_cast<char*>(&created_at_)) + sizeof(employee_id_));
}

EmployeeInitialStateEvent::~EmployeeInitialStateEvent() {
  // @@protoc_insertion_point(destructor:Workstream.Protocol.Onboarding.EmployeeInitialStateEvent)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void EmployeeInitialStateEvent::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  uuid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  first_name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  last_name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete created_at_;
  if (this != internal_default_instance()) delete updated_at_;
}

void EmployeeInitialStateEvent::ArenaDtor(void* object) {
  EmployeeInitialStateEvent* _this = reinterpret_cast< EmployeeInitialStateEvent* >(object);
  (void)_this;
}
void EmployeeInitialStateEvent::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void EmployeeInitialStateEvent::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const EmployeeInitialStateEvent& EmployeeInitialStateEvent::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_EmployeeInitialStateEvent_Onboarding_2eproto.base);
  return *internal_default_instance();
}


void EmployeeInitialStateEvent::Clear() {
// @@protoc_insertion_point(message_clear_start:Workstream.Protocol.Onboarding.EmployeeInitialStateEvent)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  uuid_.ClearToEmpty();
  first_name_.ClearToEmpty();
  last_name_.ClearToEmpty();
  if (GetArena() == nullptr && created_at_ != nullptr) {
    delete created_at_;
  }
  created_at_ = nullptr;
  if (GetArena() == nullptr && updated_at_ != nullptr) {
    delete updated_at_;
  }
  updated_at_ = nullptr;
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&employee_id_) -
      reinterpret_cast<char*>(&id_)) + sizeof(employee_id_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* EmployeeInitialStateEvent::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string uuid = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_uuid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "Workstream.Protocol.Onboarding.EmployeeInitialStateEvent.uuid"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int64 id = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .google.protobuf.Timestamp created_at = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_created_at(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .google.protobuf.Timestamp updated_at = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_updated_at(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int64 employee_id = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 40)) {
          employee_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string first_name = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 50)) {
          auto str = _internal_mutable_first_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "Workstream.Protocol.Onboarding.EmployeeInitialStateEvent.first_name"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string last_name = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 58)) {
          auto str = _internal_mutable_last_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "Workstream.Protocol.Onboarding.EmployeeInitialStateEvent.last_name"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* EmployeeInitialStateEvent::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Workstream.Protocol.Onboarding.EmployeeInitialStateEvent)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string uuid = 1;
  if (this->uuid().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_uuid().data(), static_cast<int>(this->_internal_uuid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "Workstream.Protocol.Onboarding.EmployeeInitialStateEvent.uuid");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_uuid(), target);
  }

  // int64 id = 2;
  if (this->id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(2, this->_internal_id(), target);
  }

  // .google.protobuf.Timestamp created_at = 3;
  if (this->has_created_at()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        3, _Internal::created_at(this), target, stream);
  }

  // .google.protobuf.Timestamp updated_at = 4;
  if (this->has_updated_at()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        4, _Internal::updated_at(this), target, stream);
  }

  // int64 employee_id = 5;
  if (this->employee_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(5, this->_internal_employee_id(), target);
  }

  // string first_name = 6;
  if (this->first_name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_first_name().data(), static_cast<int>(this->_internal_first_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "Workstream.Protocol.Onboarding.EmployeeInitialStateEvent.first_name");
    target = stream->WriteStringMaybeAliased(
        6, this->_internal_first_name(), target);
  }

  // string last_name = 7;
  if (this->last_name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_last_name().data(), static_cast<int>(this->_internal_last_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "Workstream.Protocol.Onboarding.EmployeeInitialStateEvent.last_name");
    target = stream->WriteStringMaybeAliased(
        7, this->_internal_last_name(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Workstream.Protocol.Onboarding.EmployeeInitialStateEvent)
  return target;
}

size_t EmployeeInitialStateEvent::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Workstream.Protocol.Onboarding.EmployeeInitialStateEvent)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string uuid = 1;
  if (this->uuid().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_uuid());
  }

  // string first_name = 6;
  if (this->first_name().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_first_name());
  }

  // string last_name = 7;
  if (this->last_name().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_last_name());
  }

  // .google.protobuf.Timestamp created_at = 3;
  if (this->has_created_at()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *created_at_);
  }

  // .google.protobuf.Timestamp updated_at = 4;
  if (this->has_updated_at()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *updated_at_);
  }

  // int64 id = 2;
  if (this->id() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_id());
  }

  // int64 employee_id = 5;
  if (this->employee_id() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_employee_id());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void EmployeeInitialStateEvent::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Workstream.Protocol.Onboarding.EmployeeInitialStateEvent)
  GOOGLE_DCHECK_NE(&from, this);
  const EmployeeInitialStateEvent* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<EmployeeInitialStateEvent>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Workstream.Protocol.Onboarding.EmployeeInitialStateEvent)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Workstream.Protocol.Onboarding.EmployeeInitialStateEvent)
    MergeFrom(*source);
  }
}

void EmployeeInitialStateEvent::MergeFrom(const EmployeeInitialStateEvent& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Workstream.Protocol.Onboarding.EmployeeInitialStateEvent)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.uuid().size() > 0) {
    _internal_set_uuid(from._internal_uuid());
  }
  if (from.first_name().size() > 0) {
    _internal_set_first_name(from._internal_first_name());
  }
  if (from.last_name().size() > 0) {
    _internal_set_last_name(from._internal_last_name());
  }
  if (from.has_created_at()) {
    _internal_mutable_created_at()->PROTOBUF_NAMESPACE_ID::Timestamp::MergeFrom(from._internal_created_at());
  }
  if (from.has_updated_at()) {
    _internal_mutable_updated_at()->PROTOBUF_NAMESPACE_ID::Timestamp::MergeFrom(from._internal_updated_at());
  }
  if (from.id() != 0) {
    _internal_set_id(from._internal_id());
  }
  if (from.employee_id() != 0) {
    _internal_set_employee_id(from._internal_employee_id());
  }
}

void EmployeeInitialStateEvent::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Workstream.Protocol.Onboarding.EmployeeInitialStateEvent)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void EmployeeInitialStateEvent::CopyFrom(const EmployeeInitialStateEvent& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Workstream.Protocol.Onboarding.EmployeeInitialStateEvent)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EmployeeInitialStateEvent::IsInitialized() const {
  return true;
}

void EmployeeInitialStateEvent::InternalSwap(EmployeeInitialStateEvent* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  uuid_.Swap(&other->uuid_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  first_name_.Swap(&other->first_name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  last_name_.Swap(&other->last_name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(EmployeeInitialStateEvent, employee_id_)
      + sizeof(EmployeeInitialStateEvent::employee_id_)
      - PROTOBUF_FIELD_OFFSET(EmployeeInitialStateEvent, created_at_)>(
          reinterpret_cast<char*>(&created_at_),
          reinterpret_cast<char*>(&other->created_at_));
}

::PROTOBUF_NAMESPACE_ID::Metadata EmployeeInitialStateEvent::GetMetadata() const {
  return GetMetadataStatic();
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace Onboarding
}  // namespace Protocol
}  // namespace Workstream
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::Workstream::Protocol::Onboarding::CompanyEvent* Arena::CreateMaybeMessage< ::Workstream::Protocol::Onboarding::CompanyEvent >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Workstream::Protocol::Onboarding::CompanyEvent >(arena);
}
template<> PROTOBUF_NOINLINE ::Workstream::Protocol::Onboarding::EmployeeEvent* Arena::CreateMaybeMessage< ::Workstream::Protocol::Onboarding::EmployeeEvent >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Workstream::Protocol::Onboarding::EmployeeEvent >(arena);
}
template<> PROTOBUF_NOINLINE ::Workstream::Protocol::Onboarding::CompanyStaffEvent* Arena::CreateMaybeMessage< ::Workstream::Protocol::Onboarding::CompanyStaffEvent >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Workstream::Protocol::Onboarding::CompanyStaffEvent >(arena);
}
template<> PROTOBUF_NOINLINE ::Workstream::Protocol::Onboarding::EmergencyContact* Arena::CreateMaybeMessage< ::Workstream::Protocol::Onboarding::EmergencyContact >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Workstream::Protocol::Onboarding::EmergencyContact >(arena);
}
template<> PROTOBUF_NOINLINE ::Workstream::Protocol::Onboarding::EmployeeInformationEvent* Arena::CreateMaybeMessage< ::Workstream::Protocol::Onboarding::EmployeeInformationEvent >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Workstream::Protocol::Onboarding::EmployeeInformationEvent >(arena);
}
template<> PROTOBUF_NOINLINE ::Workstream::Protocol::Onboarding::EmployeeInitialStateEvent* Arena::CreateMaybeMessage< ::Workstream::Protocol::Onboarding::EmployeeInitialStateEvent >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Workstream::Protocol::Onboarding::EmployeeInitialStateEvent >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
