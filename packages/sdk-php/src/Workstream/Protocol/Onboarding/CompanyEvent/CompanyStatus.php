<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: Onboarding.proto

namespace Workstream\Protocol\Onboarding\CompanyEvent;

use UnexpectedValueException;

/**
 * Protobuf type <code>Workstream.Protocol.Onboarding.CompanyEvent.CompanyStatus</code>
 */
class CompanyStatus
{
    /**
     * Generated from protobuf enum <code>ACTIVE = 0;</code>
     */
    const ACTIVE = 0;
    /**
     * Generated from protobuf enum <code>TEST = 1;</code>
     */
    const TEST = 1;
    /**
     * Generated from protobuf enum <code>DISABLED = 2;</code>
     */
    const DISABLED = 2;
    /**
     * Generated from protobuf enum <code>TEMPLATE = 3;</code>
     */
    const TEMPLATE = 3;

    private static $valueToName = [
        self::ACTIVE => 'ACTIVE',
        self::TEST => 'TEST',
        self::DISABLED => 'DISABLED',
        self::TEMPLATE => 'TEMPLATE',
    ];

    public static function name($value)
    {
        if (!isset(self::$valueToName[$value])) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no name defined for value %s', __CLASS__, $value));
        }
        return self::$valueToName[$value];
    }


    public static function value($name)
    {
        $const = __CLASS__ . '::' . strtoupper($name);
        if (!defined($const)) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no value defined for name %s', __CLASS__, $name));
        }
        return constant($const);
    }
}

// Adding a class alias for backwards compatibility with the previous class name.
class_alias(CompanyStatus::class, \Workstream\Protocol\Onboarding\CompanyEvent_CompanyStatus::class);

